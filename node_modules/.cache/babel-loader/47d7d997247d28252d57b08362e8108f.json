{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/homeView/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\nimport \"./index.css\";\nimport rooms from \"./json/rooms.json\";\n/*---------------------------------------------------------------\n\n            Cette classe génère la scène 360\n\n------------------------------------------------------------------*/\n\nclass NavRoomDates extends Component {\n  render() {\n    var currentDate = this.props.currentDate;\n    var navRender = []; // on scan chaque élément du json\n\n    rooms.forEach(element => {\n      // on récupère la date\n      var date = element.date;\n\n      if (currentDate != date) {} // on rédcupère le sous tableau correspondant à la date\n\n\n      var content = element.content; // on remplit le tableau qui récupère l'information du click de l'enfant\n\n      lineRender.push(React.createElement(LineNavRooms, {\n        page: this.childHandler,\n        date: date,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n/*---------------------------------------------------------------\n\n            Cette classe génère la scène 360\n\n------------------------------------------------------------------*/\n\n\nclass Frame360 extends Component {\n  constructor(props) {\n    super(props); // on initialise les refs\n\n    this.frameRef = React.createRef(); // on initialise les states\n\n    this.state = {\n      id: this.props.idRoom,\n      room: this.props.filenameRoom\n    };\n  }\n\n  componentDidMount() {\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n    var camera, scene, renderer;\n    var isUserInteracting = false,\n        onMouseDownMouseX = 0,\n        onMouseDownMouseY = 0,\n        lon = 0,\n        onMouseDownLon = 0,\n        lat = 0,\n        onMouseDownLat = 0,\n        phi = 0,\n        theta = 0; // on récupère la room\n\n    var room = this.state.room; // on active le frame\n\n    var frame = init(room);\n    this.frameRef.appendChild(frame);\n    animate();\n\n    function init(room) {\n      var mesh;\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1100);\n      camera.target = new THREE.Vector3(0, 0, 0);\n      scene = new THREE.Scene();\n      var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward\n\n      geometry.scale(-1, 1, 1);\n      var texture = new THREE.TextureLoader().load(process.env.PUBLIC_URL + '/img/' + room);\n      var material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.addEventListener('mousedown', onPointerStart, false);\n      document.addEventListener('mousemove', onPointerMove, false);\n      document.addEventListener('mouseup', onPointerUp, false);\n      document.addEventListener('wheel', onDocumentMouseWheel, false);\n      document.addEventListener('touchstart', onPointerStart, false);\n      document.addEventListener('touchmove', onPointerMove, false);\n      document.addEventListener('touchend', onPointerUp, false);\n      document.addEventListener('dragover', function (event) {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n      }, false);\n      document.addEventListener('dragenter', function () {\n        document.body.style.opacity = 0.5;\n      }, false);\n      document.addEventListener('dragleave', function () {\n        document.body.style.opacity = 1;\n      }, false);\n      document.addEventListener('drop', function (event) {\n        event.preventDefault();\n        var reader = new FileReader();\n        reader.addEventListener('load', function (event) {\n          material.map.image.src = event.target.result;\n          material.map.needsUpdate = true;\n        }, false);\n        reader.readAsDataURL(event.dataTransfer.files[0]);\n        document.body.style.opacity = 1;\n      }, false); //\n\n      window.addEventListener('resize', onWindowResize, false);\n      return renderer.domElement;\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function onPointerStart(event) {\n      isUserInteracting = true;\n      var clientX = event.clientX || event.touches[0].clientX;\n      var clientY = event.clientY || event.touches[0].clientY;\n      onMouseDownMouseX = clientX;\n      onMouseDownMouseY = clientY;\n      onMouseDownLon = lon;\n      onMouseDownLat = lat;\n    }\n\n    function onPointerMove(event) {\n      if (isUserInteracting === true) {\n        var clientX = event.clientX || event.touches[0].clientX;\n        var clientY = event.clientY || event.touches[0].clientY;\n        lon = (onMouseDownMouseX - clientX) * 0.1 + onMouseDownLon;\n        lat = (clientY - onMouseDownMouseY) * 0.1 + onMouseDownLat;\n      }\n    }\n\n    function onPointerUp() {\n      isUserInteracting = false;\n    }\n\n    function onDocumentMouseWheel(event) {\n      var fov = camera.fov + event.deltaY * 0.05;\n      camera.fov = THREE.Math.clamp(fov, 10, 75);\n      camera.updateProjectionMatrix();\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      update();\n    }\n\n    function update() {\n      lat = Math.max(-85, Math.min(85, lat));\n      phi = THREE.Math.degToRad(90 - lat);\n      theta = THREE.Math.degToRad(lon);\n      camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n      camera.target.y = 500 * Math.cos(phi);\n      camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n      camera.lookAt(camera.target);\n      /*\n      // distortion\n      camera.position.copy( camera.target ).negate();\n      */\n\n      renderer.render(scene, camera);\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itemRoom\",\n      ref: ref => this.frameRef = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }));\n  }\n\n}\n/*---------------------------------------------------------------\n\n                Cette classe génère la scène VR\n\n------------------------------------------------------------------*/\n\n\nclass FrameVR extends Component {\n  constructor(props) {\n    super(props); // on initialise les refs\n\n    this.frameRef = React.createRef();\n    this.btnVRRef = React.createRef(); // on initialise les états\n\n    this.state = {\n      room: this.props.room\n    };\n  }\n\n  componentDidMount() {\n    // on récupère la room\n    var room = this.state.room; // on active le frame\n\n    var returnInit = init(room); // on ajoute le renderer\n\n    this.frameRef.appendChild(returnInit[0]); // on ajoute le bouton VR enable\n\n    this.buttonVRRef.appendChild(returnInit[1]);\n    var camera;\n    var renderer;\n    var scene;\n    animate();\n\n    function init(room) {\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.vr.enabled = true;\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.layers.enable(1);\n      var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward\n\n      geometry.scale(-1, 1, 1);\n      var texture = new THREE.TextureLoader().load(process.env.PUBLIC_URL + '/img/' + room);\n      var material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      var mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      window.addEventListener('resize', onWindowResize, false); // on retourne les éléments à ajouter au dom\n\n      return [renderer.domElement, WEBVR.createButton(renderer, {\n        referenceSpaceType: 'local'\n      })];\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function animate() {\n      renderer.setAnimationLoop(render);\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itemRoom\",\n      ref: ref => this.frameRef = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"vrEnabled\",\n      ref: ref => this.buttonVRRef = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }));\n  }\n\n}\n/*---------------------------------------------------------------\n\nCette classe génère un item de la ligne de pièce\n\n------------------------------------------------------------------*/\n\n\nclass ItemNavRooms extends Component {\n  render() {\n    var filename = process.env.PUBLIC_URL + '/img/' + this.props.filename;\n    return React.createElement(\"div\", {\n      className: \"navRoomItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navRoomItemTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, this.props.room), React.createElement(\"img\", {\n      src: filename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }));\n  }\n\n}\n/*---------------------------------------------------------------\n\nCette classe génère une ligne de pièces en fonction d'une date\ndonnée par le parent\n\n------------------------------------------------------------------*/\n\n\nclass LineNavRooms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frameVRSize: \"small\",\n      room: \"room4-salon-291019.JPG\"\n    };\n  }\n\n  render() {\n    // on va remplir un tableau d'élément jsx\n    var roomsRender = [];\n    var content = this.props.content; // on scan chaque élément du json\n\n    content.forEach(element => {\n      // on récupère l'id pour pouvoir retrouver facilement les dates dans le composant frame360\n      var id = element.id;\n      var filename = element.filename;\n      var name = element.name; // on donne au parent un tableau contenant la page voulue et la photo 360\n      // on envoit d'abord vers le 360\n\n      var arrayReturn = [\"frame360\", id, filename]; // on remplit le tableau\n\n      roomsRender.push(React.createElement(\"div\", {\n        className: \"navRoomsFlex\",\n        onClick: () => this.props.page(arrayReturn),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(ItemNavRooms, {\n        room: name,\n        filename: filename,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      })));\n    });\n    return React.createElement(\"div\", {\n      className: \"lineNavRooms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navRoomsDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, this.props.date), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: \"navRooms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, roomsRender));\n  }\n\n}\n/*---------------------------------------------------------------\n\nIci on affiche plusieurs choses différentes selon l'état PAGE.\n- Si page vaut home on affiche le menu\n- Si page vaut frame360 on affiche la sphere draggable\n- Si page vaut frameVR on créé la scene VR\n\n------------------------------------------------------------------*/\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // l'état par défaut de la page est home et il n'y a pas d'image sur la page home d'ou id et filename nuls\n\n    this.state = {\n      page: \"home\",\n      id: \"\",\n      filename: \"\"\n    };\n    this.childHandler = this.childHandler.bind(this);\n  } // on récupère les infos de l'enfant, ici un tableau\n\n\n  childHandler(dataFromChild) {\n    var pageReturn = dataFromChild[0];\n    var idReturn = dataFromChild[1];\n    var filenameReturn = dataFromChild[2];\n    this.setState({\n      page: pageReturn,\n      id: idReturn,\n      filename: filenameReturn\n    });\n  }\n\n  render() {\n    // on va remplir un tableau d'élément jsx\n    var lineRender = []; // on scan chaque élément du json\n\n    rooms.forEach(element => {\n      // on récupère la date\n      var date = element.date; // on rédcupère le sous tableau correspondant à la date\n\n      var content = element.content; // on remplit le tableau qui récupère l'information du click de l'enfant\n\n      lineRender.push(React.createElement(LineNavRooms, {\n        page: this.childHandler,\n        date: date,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }));\n    }); // on dispatch selon l'état\n\n    var page = this.state.page;\n\n    if (page == \"home\") {\n      var pageWrapper = React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, \"HomeView | Questembert\")), React.createElement(\"section\", {\n        className: \"homeContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, lineRender));\n    } else if (page == \"frame360\") {\n      var pageWrapper = React.createElement(\"section\", {\n        className: \"FrameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"FrameReturn\",\n        onClick: () => this.setState({\n          page: \"home\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, \"Retour\"), React.createElement(\"span\", {\n        className: \"goVR\",\n        onClick: () => this.setState({\n          page: \"frameVR\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"Voir en VR\"), React.createElement(NavRoomDates, {\n        currentDate: date,\n        idRoom: this.state.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }), React.createElement(Frame360, {\n        filenameRoom: this.state.filename,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }));\n    } else if (page == \"frameVR\") {\n      var pageWrapper = React.createElement(\"section\", {\n        className: \"FrameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"FrameReturn\",\n        onClick: () => this.setState({\n          page: \"home\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, \"Retour\"), React.createElement(FrameVR, {\n        room: this.state.filename,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, pageWrapper);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 530\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/homeView/src/index.js"],"names":["React","Component","ReactDOM","THREE","WEBVR","rooms","NavRoomDates","render","currentDate","props","navRender","forEach","element","date","content","lineRender","push","childHandler","Frame360","constructor","frameRef","createRef","state","id","idRoom","room","filenameRoom","componentDidMount","camera","scene","renderer","isUserInteracting","onMouseDownMouseX","onMouseDownMouseY","lon","onMouseDownLon","lat","onMouseDownLat","phi","theta","frame","init","appendChild","animate","mesh","PerspectiveCamera","window","innerWidth","innerHeight","target","Vector3","Scene","geometry","SphereBufferGeometry","scale","texture","TextureLoader","load","process","env","PUBLIC_URL","material","MeshBasicMaterial","map","Mesh","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","document","addEventListener","onPointerStart","onPointerMove","onPointerUp","onDocumentMouseWheel","event","preventDefault","dataTransfer","dropEffect","body","style","opacity","reader","FileReader","image","src","result","needsUpdate","readAsDataURL","files","onWindowResize","domElement","aspect","updateProjectionMatrix","clientX","touches","clientY","fov","deltaY","Math","clamp","requestAnimationFrame","update","max","min","degToRad","x","sin","cos","y","z","lookAt","ref","FrameVR","btnVRRef","returnInit","buttonVRRef","vr","enabled","layers","enable","createButton","referenceSpaceType","setAnimationLoop","ItemNavRooms","filename","LineNavRooms","frameVRSize","roomsRender","name","arrayReturn","page","App","bind","dataFromChild","pageReturn","idReturn","filenameReturn","setState","pageWrapper","rootElement","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\nimport \"./index.css\";\nimport rooms from \"./json/rooms.json\";\n\n\n/*---------------------------------------------------------------\n\n            Cette classe génère la scène 360\n\n------------------------------------------------------------------*/\n\n\nclass NavRoomDates extends Component {\n\n  render(){\n    var currentDate = this.props.currentDate;\n    var navRender = [];\n    // on scan chaque élément du json\n    rooms.forEach((element) => {\n      // on récupère la date\n      var date = element.date;\n      if(currentDate!=date){\n\n      }\n      // on rédcupère le sous tableau correspondant à la date\n      var content = element.content;\n\n      // on remplit le tableau qui récupère l'information du click de l'enfant\n      lineRender.push(<LineNavRooms page={this.childHandler} date={date} content={content}/>);\n    });\n\n    return(\n      <div></div>\n    )\n  }\n\n\n}\n\n\n\n/*---------------------------------------------------------------\n\n            Cette classe génère la scène 360\n\n------------------------------------------------------------------*/\n\nclass Frame360 extends Component {\n  constructor(props) {\n    super(props);\n\n    // on initialise les refs\n    this.frameRef = React.createRef();\n\n    // on initialise les states\n    this.state = {\n        id: this.props.idRoom,\n        room: this.props.filenameRoom\n       };\n  }\n  componentDidMount() {\n\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n\n    var camera, scene, renderer;\n\n\t\tvar isUserInteracting = false,\n\t\t\t\tonMouseDownMouseX = 0, onMouseDownMouseY = 0,\n\t\t\t\tlon = 0, onMouseDownLon = 0,\n\t\t\t\tlat = 0, onMouseDownLat = 0,\n\t\t\t\tphi = 0, theta = 0;\n\n    // on récupère la room\n    var room = this.state.room;\n\n    // on active le frame\n    var frame = init(room);\n\n    this.frameRef.appendChild( frame );\n\t\tanimate();\n\n\n\n\n    function init(room) {\n\n        var mesh;\n\n\n        camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1100 );\n        camera.target = new THREE.Vector3( 0, 0, 0 );\n\n        scene = new THREE.Scene();\n\n        var geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n        // invert the geometry on the x-axis so that all of the faces point inward\n        geometry.scale( -1, 1, 1 );\n\n        var texture = new THREE.TextureLoader().load( process.env.PUBLIC_URL + '/img/'+room );\n\n        var material = new THREE.MeshBasicMaterial( { map: texture } );\n\n        mesh = new THREE.Mesh( geometry, material );\n\n        scene.add( mesh );\n\n        renderer = new THREE.WebGLRenderer();\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n        document.addEventListener( 'mousedown', onPointerStart, false );\n        document.addEventListener( 'mousemove', onPointerMove, false );\n        document.addEventListener( 'mouseup', onPointerUp, false );\n\n        document.addEventListener( 'wheel', onDocumentMouseWheel, false );\n\n        document.addEventListener( 'touchstart', onPointerStart, false );\n        document.addEventListener( 'touchmove', onPointerMove, false );\n        document.addEventListener( 'touchend', onPointerUp, false );\n\n\n        document.addEventListener( 'dragover', function ( event ) {\n\n          event.preventDefault();\n          event.dataTransfer.dropEffect = 'copy';\n\n        }, false );\n\n        document.addEventListener( 'dragenter', function () {\n\n          document.body.style.opacity = 0.5;\n\n        }, false );\n\n        document.addEventListener( 'dragleave', function () {\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        document.addEventListener( 'drop', function ( event ) {\n\n          event.preventDefault();\n\n          var reader = new FileReader();\n          reader.addEventListener( 'load', function ( event ) {\n\n            material.map.image.src = event.target.result;\n            material.map.needsUpdate = true;\n\n          }, false );\n          reader.readAsDataURL( event.dataTransfer.files[ 0 ] );\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        //\n\n        window.addEventListener( 'resize', onWindowResize, false );\n\n        return(renderer.domElement);\n      }\n\n\n    function onWindowResize() {\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n      }\n\n    function onPointerStart( event ) {\n        isUserInteracting = true;\n\n        var clientX = event.clientX || event.touches[ 0 ].clientX;\n        var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n        onMouseDownMouseX = clientX;\n        onMouseDownMouseY = clientY;\n\n        onMouseDownLon = lon;\n        onMouseDownLat = lat;\n\n      }\n\n    function onPointerMove( event ) {\n        if ( isUserInteracting === true ) {\n\n          var clientX = event.clientX || event.touches[ 0 ].clientX;\n          var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n          lon = ( onMouseDownMouseX - clientX ) * 0.1 + onMouseDownLon;\n          lat = ( clientY - onMouseDownMouseY ) * 0.1 + onMouseDownLat;\n\n        }\n\n      }\n\n    function onPointerUp() {\n\n        isUserInteracting = false;\n\n      }\n\n    function onDocumentMouseWheel( event ) {\n        var fov = camera.fov + event.deltaY * 0.05;\n\n        camera.fov = THREE.Math.clamp( fov, 10, 75 );\n\n        camera.updateProjectionMatrix();\n\n      }\n\n    function animate() {\n\n\n        requestAnimationFrame( animate );\n        update();\n\n      }\n\n    function update() {\n\n        lat = Math.max( - 85, Math.min( 85, lat ) );\n        phi = THREE.Math.degToRad( 90 - lat );\n        theta = THREE.Math.degToRad( lon );\n\n        camera.target.x = 500 * Math.sin( phi ) * Math.cos( theta );\n        camera.target.y = 500 * Math.cos( phi );\n        camera.target.z = 500 * Math.sin( phi ) * Math.sin( theta );\n\n        camera.lookAt( camera.target );\n\n        /*\n        // distortion\n        camera.position.copy( camera.target ).negate();\n        */\n\n        renderer.render( scene, camera );\n\n      }\n\n  }\n\n\n  render() {\n    return (\n      <section>\n        <div className=\"itemRoom\" ref={ref => (this.frameRef = ref)} />\n      </section>\n    )\n  }\n}\n/*---------------------------------------------------------------\n\n                Cette classe génère la scène VR\n\n------------------------------------------------------------------*/\nclass FrameVR extends Component {\n  constructor(props) {\n    super(props);\n\n    // on initialise les refs\n    this.frameRef = React.createRef();\n    this.btnVRRef = React.createRef();\n\n    // on initialise les états\n    this.state = {\n       room: this.props.room\n       };\n  }\n  componentDidMount() {\n\n\n    // on récupère la room\n    var room = this.state.room;\n\n    // on active le frame\n    var returnInit = init(room);\n\n    // on ajoute le renderer\n    this.frameRef.appendChild( returnInit[0] );\n\n    // on ajoute le bouton VR enable\n    this.buttonVRRef.appendChild( returnInit[1] );\n\n    var camera;\n  \tvar renderer;\n  \tvar scene;\n\n  \tanimate();\n\n  \tfunction init(room) {\n\n  \t\trenderer = new THREE.WebGLRenderer();\n  \t\trenderer.setPixelRatio( window.devicePixelRatio );\n  \t\trenderer.setSize( window.innerWidth, window.innerHeight );\n  \t\trenderer.vr.enabled = true;\n\n  \t\tscene = new THREE.Scene();\n\n  \t\tcamera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 1, 1000 );\n  \t\tcamera.layers.enable( 1 );\n\n      var geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n      // invert the geometry on the x-axis so that all of the faces point inward\n      geometry.scale( -1, 1, 1 );\n\n      var texture = new THREE.TextureLoader().load( process.env.PUBLIC_URL + '/img/'+room );\n\n      var material = new THREE.MeshBasicMaterial( { map: texture } );\n\n      var mesh = new THREE.Mesh( geometry, material );\n\n      scene.add( mesh );\n\n  \t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n      // on retourne les éléments à ajouter au dom\n  \t\treturn [renderer.domElement, WEBVR.createButton( renderer, { referenceSpaceType: 'local' } )];\n\n  \t}\n\n\n  \tfunction onWindowResize() {\n\n  \t\tcamera.aspect = window.innerWidth / window.innerHeight;\n  \t\tcamera.updateProjectionMatrix();\n\n  \t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n  \t}\n\n  \tfunction animate() {\n\n  \t\trenderer.setAnimationLoop( render );\n\n  \t}\n\n  \tfunction render() {\n\n  \t\trenderer.render( scene, camera );\n\n  \t}\n\n\n\n  }\n\n\n  render() {\n    return (\n        <section>\n          <div className=\"itemRoom\" ref={ref => (this.frameRef = ref)} />\n          <div className=\"vrEnabled\" ref={ref => (this.buttonVRRef = ref)}/>\n        </section>\n    )\n  }\n}\n\n\n\n\n/*---------------------------------------------------------------\n\nCette classe génère un item de la ligne de pièce\n\n------------------------------------------------------------------*/\nclass ItemNavRooms extends Component {\n\n  render(){\n    var filename = process.env.PUBLIC_URL + '/img/'+this.props.filename;\n    return(\n      <div className=\"navRoomItem\">\n        <div className=\"navRoomItemTitle\">{this.props.room}</div>\n        <img src={filename}/>\n      </div>\n    )\n\n  }\n\n\n}\n\n/*---------------------------------------------------------------\n\nCette classe génère une ligne de pièces en fonction d'une date\ndonnée par le parent\n\n------------------------------------------------------------------*/\nclass LineNavRooms extends Component {\n  constructor(props) {\n      super(props)\n      this.state = {\n          frameVRSize: \"small\",\n          room: \"room4-salon-291019.JPG\"\n      };\n  }\n\n\n\n\n  render() {\n\n    // on va remplir un tableau d'élément jsx\n    var roomsRender = [];\n    var content = this.props.content;\n\n    // on scan chaque élément du json\n    content.forEach((element) => {\n\n      // on récupère l'id pour pouvoir retrouver facilement les dates dans le composant frame360\n      var id = element.id;\n      var filename = element.filename;\n\n      var name = element.name;\n\n      // on donne au parent un tableau contenant la page voulue et la photo 360\n      // on envoit d'abord vers le 360\n      var arrayReturn = [\"frame360\", id, filename];\n\n      // on remplit le tableau\n      roomsRender.push(<div className=\"navRoomsFlex\" onClick={()=> this.props.page(arrayReturn)} ><ItemNavRooms room={name} filename={filename}/></div>);\n    });\n\n    return (\n      <div className=\"lineNavRooms\">\n        <div className=\"navRoomsDate\">{this.props.date}</div><br/>\n        <nav className=\"navRooms\">\n          {/*<SelectRoom action={this.childHandler}/>*/}\n\n          {roomsRender}\n        </nav>\n      </div>\n    )\n  }\n}\n/*---------------------------------------------------------------\n\nIci on affiche plusieurs choses différentes selon l'état PAGE.\n- Si page vaut home on affiche le menu\n- Si page vaut frame360 on affiche la sphere draggable\n- Si page vaut frameVR on créé la scene VR\n\n------------------------------------------------------------------*/\nclass App extends Component {\n  constructor(props) {\n      super(props)\n      // l'état par défaut de la page est home et il n'y a pas d'image sur la page home d'ou id et filename nuls\n      this.state = {\n          page: \"home\",\n          id: \"\",\n          filename: \"\"\n\n      };\n      this.childHandler = this.childHandler.bind(this)\n  }\n\n\n  // on récupère les infos de l'enfant, ici un tableau\n  childHandler(dataFromChild) {\n\n        var pageReturn = dataFromChild[0];\n        var idReturn = dataFromChild[1];\n        var filenameReturn = dataFromChild[2];\n        this.setState({\n            page: pageReturn,\n            id: idReturn,\n            filename: filenameReturn\n        });\n\n  }\n\n  render() {\n\n    // on va remplir un tableau d'élément jsx\n    var lineRender = [];\n    // on scan chaque élément du json\n    rooms.forEach((element) => {\n      // on récupère la date\n      var date = element.date;\n\n      // on rédcupère le sous tableau correspondant à la date\n      var content = element.content;\n\n      // on remplit le tableau qui récupère l'information du click de l'enfant\n      lineRender.push(<LineNavRooms page={this.childHandler} date={date} content={content}/>);\n    });\n\n    // on dispatch selon l'état\n    var page = this.state.page;\n    if(page==\"home\"){\n      var pageWrapper = <section>\n                          <header><span>HomeView | Questembert</span></header>\n                          <section className=\"homeContainer\">{lineRender}</section>\n                        </section>\n    }\n    else if(page==\"frame360\"){\n      var pageWrapper = <section className=\"FrameContainer\">\n                          <span className=\"FrameReturn\" onClick={()=>this.setState({page:\"home\"})}>Retour</span>\n                          <span className=\"goVR\" onClick={()=>this.setState({page:\"frameVR\"})}>Voir en VR</span>\n                          <NavRoomDates currentDate={date} idRoom={this.state.id}/>\n                          <Frame360 filenameRoom={this.state.filename}/>\n                        </section>\n    }\n    else if(page==\"frameVR\"){\n      var pageWrapper = <section className=\"FrameContainer\">\n                          <span className=\"FrameReturn\" onClick={()=>this.setState({page:\"home\"})}>Retour</span>\n                          <FrameVR room={this.state.filename}/>\n                        </section>\n    }\n\n    return (\n      <section>\n\n        {pageWrapper}\n      </section>\n    )\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}