{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/homeView/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frame: '',\n      renderer: ''\n    };\n  }\n\n  componentDidMount() {\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n    var camera, scene, renderer;\n    var isUserInteracting = false,\n        onMouseDownMouseX = 0,\n        onMouseDownMouseY = 0,\n        lon = 0,\n        onMouseDownLon = 0,\n        lat = 0,\n        onMouseDownLat = 0,\n        phi = 0,\n        theta = 0; //this.setState({frame: frame});\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward\n\n    geometry.scale(-1, 1, 1);\n    var texture = new THREE.TextureLoader().load('img/IMG_7233.JPG');\n    var material = new THREE.MeshBasicMaterial({\n      map: texture\n    });\n    var mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n    camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/homeView/src/index.js"],"names":["React","Component","ReactDOM","THREE","WEBVR","App","constructor","props","state","frame","renderer","componentDidMount","camera","scene","isUserInteracting","onMouseDownMouseX","onMouseDownMouseY","lon","onMouseDownLon","lat","onMouseDownLat","phi","theta","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","setSize","mount","appendChild","domElement","geometry","SphereBufferGeometry","scale","texture","TextureLoader","load","material","MeshBasicMaterial","map","mesh","Mesh","add","position","z","animate","requestAnimationFrame","cube","rotation","x","y","render","ref","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frame: '',\n      renderer: ''};\n  }\n  componentDidMount() {\n\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n\n    var camera, scene, renderer;\n\n\t\tvar isUserInteracting = false,\n\t\t\t\tonMouseDownMouseX = 0, onMouseDownMouseY = 0,\n\t\t\t\tlon = 0, onMouseDownLon = 0,\n\t\t\t\tlat = 0, onMouseDownLat = 0,\n\t\t\t\tphi = 0, theta = 0;\n\n\n\n    //this.setState({frame: frame});\n\n\n\n    var scene = new THREE.Scene();\n\t\tvar camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n\n\t\tvar renderer = new THREE.WebGLRenderer();\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n    this.mount.appendChild( renderer.domElement );\n\n    var geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n    // invert the geometry on the x-axis so that all of the faces point inward\n    geometry.scale( -1, 1, 1 );\n\n    var texture = new THREE.TextureLoader().load( 'img/IMG_7233.JPG' );\n\n    var material = new THREE.MeshBasicMaterial( { map: texture } );\n    var mesh = new THREE.Mesh( geometry, material );\n\n\n\t\tscene.add( mesh );\n\n\t\tcamera.position.z = 5;\n\n\t\tvar animate = function () {\n\t\t\trequestAnimationFrame( animate );\n\n\t\t\tcube.rotation.x += 0.01;\n\t\t\tcube.rotation.y += 0.01;\n\n\t\t\trenderer.render( scene, camera );\n\t\t};\n\n\t\tanimate();\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div ref={ref => (this.mount = ref)} />\n\n      </div>\n    )\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}