{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/homeView/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttonVR: ''\n    };\n  }\n\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer(); // on active la VR\n\n    renderer.vr.enabled = true;\n    renderer.setSize(window.innerWidth / 2, window.innerHeight / 2); // on ajoute le bouton en tant qu'état\n\n    this.setState({\n      buttonVR: WEBVR.createButton(renderer)\n    }); // on ajoute l'élément au composant react\n\n    this.mount.appendChild(renderer.domElement); // creation de la 3D\n\n    var light = new THREE.DirectionalLight(0xffffff);\n    light.position.set(0, 1, 1).normalize();\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshPhongMaterial({\n      ambient: 0x050505,\n      color: 0xFF0000,\n      specular: 0x555555,\n      shininess: 30,\n      wireframe: true\n    });\n    var cube = new THREE.Mesh(geometry, material); // on ajoute les éléments à la scene\n\n    scene.add(cube);\n    scene.add(light); // on gere la position de la camera\n\n    camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.buttonVR));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/homeView/src/index.js"],"names":["React","Component","ReactDOM","THREE","WEBVR","App","constructor","props","state","buttonVR","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","vr","enabled","setSize","setState","createButton","mount","appendChild","domElement","light","DirectionalLight","position","set","normalize","geometry","BoxGeometry","material","MeshPhongMaterial","ambient","color","specular","shininess","wireframe","cube","Mesh","add","z","animate","requestAnimationFrame","rotation","x","y","render","ref","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttonVR: ''};\n  }\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n    var renderer = new THREE.WebGLRenderer();\n\n    // on active la VR\n    renderer.vr.enabled = true;\n\n    renderer.setSize( window.innerWidth/2, window.innerHeight/2 );\n\n    // on ajoute le bouton en tant qu'état\n    this.setState({\n\n      buttonVR: WEBVR.createButton( renderer )\n    });\n    // on ajoute l'élément au composant react\n    this.mount.appendChild( renderer.domElement );\n\n    // creation de la 3D\n    var light = new THREE.DirectionalLight( 0xffffff );\n    light.position.set( 0, 1, 1 ).normalize();\n\n    var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    var material = new THREE.MeshPhongMaterial( { ambient: 0x050505, color: 0xFF0000, specular: 0x555555, shininess: 30, wireframe: true } );\n    var cube = new THREE.Mesh( geometry, material );\n\n    // on ajoute les éléments à la scene\n    scene.add( cube );\n    scene.add( light );\n    // on gere la position de la camera\n    camera.position.z = 5;\n    var animate = function () {\n      requestAnimationFrame( animate );\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render( scene, camera );\n    };\n    animate();\n  }\n  render() {\n    return (\n      <div>\n        <div ref={ref => (this.mount = ref)} />\n        <button>{ this.state.buttonVR }</button>\n      </div>\n    )\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}