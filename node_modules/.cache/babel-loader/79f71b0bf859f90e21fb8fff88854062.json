{"ast":null,"code":"/**\n * @author mrdoob / http://mrdoob.com\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Based on @tojiro's vr-samples-utils.js\n */\nvar WEBVR = {\n  createButton: function (renderer, options) {\n    if (options && options.referenceSpaceType) {\n      renderer.vr.setReferenceSpaceType(options.referenceSpaceType);\n    }\n\n    function showEnterVR(device) {\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'ENTER VR';\n\n      button.onmouseenter = function () {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = function () {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = function () {\n        device.isPresenting ? device.exitPresent() : device.requestPresent([{\n          source: renderer.domElement\n        }]);\n      };\n\n      renderer.vr.setDevice(device);\n    }\n\n    function showEnterXR()\n    /*device*/\n    {\n      var currentSession = null;\n\n      function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        renderer.vr.setSession(session);\n        button.textContent = 'EXIT XR';\n        currentSession = session;\n      }\n\n      function onSessionEnded()\n      /*event*/\n      {\n        currentSession.removeEventListener('end', onSessionEnded);\n        renderer.vr.setSession(null);\n        button.textContent = 'ENTER XR';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'ENTER XR';\n\n      button.onmouseenter = function () {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = function () {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = function () {\n        if (currentSession === null) {\n          // WebXR's requestReferenceSpace only works if the corresponding feature\n          // was requested at session creation time. For simplicity, just ask for\n          // the interesting ones as optional features, but be aware that the\n          // requestReferenceSpace call will fail if it turns out to be unavailable.\n          // ('local' is always available for immersive sessions and doesn't need to\n          // be requested separately.)\n          var sessionInit = {\n            optionalFeatures: ['local-floor', 'bounded-floor']\n          };\n          navigator.xr.requestSession('immersive-vr', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showVRNotFound() {\n      disableButton();\n      button.textContent = 'VR NOT FOUND';\n      renderer.vr.setDevice(null);\n    }\n\n    function showXRNotFound() {\n      disableButton();\n      button.textContent = 'XR NOT FOUND';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator && 'supportsSession' in navigator.xr) {\n      var button = document.createElement('button');\n      button.style.display = 'none';\n      stylizeElement(button);\n      navigator.xr.supportsSession('immersive-vr').then(showEnterXR).catch(showXRNotFound);\n      return button;\n    } else if ('getVRDisplays' in navigator) {\n      var button = document.createElement('button');\n      button.style.display = 'none';\n      stylizeElement(button);\n      window.addEventListener('vrdisplayconnect', function (event) {\n        showEnterVR(event.display);\n      }, false);\n      window.addEventListener('vrdisplaydisconnect', function ()\n      /*event*/\n      {\n        showVRNotFound();\n      }, false);\n      window.addEventListener('vrdisplaypresentchange', function (event) {\n        button.textContent = event.display.isPresenting ? 'EXIT VR' : 'ENTER VR';\n      }, false);\n      window.addEventListener('vrdisplayactivate', function (event) {\n        event.display.requestPresent([{\n          source: renderer.domElement\n        }]);\n      }, false);\n      navigator.getVRDisplays().then(function (displays) {\n        if (displays.length > 0) {\n          showEnterVR(displays[0]);\n        } else {\n          showVRNotFound();\n        }\n      }).catch(showVRNotFound);\n      return button;\n    } else {\n      var message = document.createElement('a');\n      message.href = 'https://webvr.info';\n      message.innerHTML = 'WEBVR NOT SUPPORTED';\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n};\nexport { WEBVR };","map":null,"metadata":{},"sourceType":"module"}