{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/homeView/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js'; //import \"./index.css\";\n\nimport './styles/tailwind.css';\nimport rooms from \"./json/rooms.json\";\n/*=================================================================\n                  STRUCTURE DES COMPOSANTS\n===================================================================\n\nOn navigue dans le composant App:\nSur la page d'accueil d'état HOME les scenes sont classées par date.\n\nOn a un composant qui génère une ligne de pièce par date.\n  Dans ce composant, un autre génère l'item clickable.\n\nAu clic on renvoit au composant App les informations de la scène cliquée.\nOn affiche alors un frame360 dont l'image est celle renvoyée par le click dans le menu.\n\n*/\n\n/*------------------------------------------------------------------------------\n\n  Cette classe génère l'affichage de l'item de navigation dans\n  une pièce à une date différente\n\n--------------------------------------------------------------------------------*/\n\nclass NavRoomDatesItem extends Component {\n  render() {\n    if (this.props.isCurrent) {\n      var className = \"h-20 relative mx-4 w-10 border-4 border-white rounded overflow-hidden\";\n    } else {\n      var className = \"h-20 relative mx-4 px-4 border-2 border-gray-300 rounded overflow-hidden\";\n    }\n\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"h-20 object-cover\",\n      src: process.env.PUBLIC_URL + '/img/' + this.props.filename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"absolute bottom-0 py-1 bg-gray-100 w-full text-center uppercase font-semibold tracking-wide text-gray-500 text-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.date));\n  }\n\n}\n/*------------------------------------------------------------------------------\n\n  Cette classe génère la liste des différentes dates de modification d'une pièce\n\n--------------------------------------------------------------------------------*/\n\n\nclass NavRoomDates extends Component {\n  render() {\n    var currentDate = this.props.currentDate;\n    var idRoom = this.props.idRoom;\n    var navRender = []; // on scan chaque élément du json\n\n    rooms.forEach(element => {\n      // on récupère la date\n      var date = element.date;\n      var content = element.content;\n      content.forEach(room => {\n        if (room.id == idRoom) {\n          var filenameOtherDate = room.filename;\n          var isCurrent = false;\n\n          if (currentDate == date) {\n            isCurrent = true;\n          }\n\n          navRender.push(React.createElement(\"div\", {\n            onClick: () => this.props.clickDate(filenameOtherDate),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(NavRoomDatesItem, {\n            isCurrent: isCurrent,\n            date: date,\n            filename: filenameOtherDate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          })));\n        }\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"absolute mt-6 w-full flex justify-center items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, navRender);\n  }\n\n}\n/*---------------------------------------------------------------\n\n            Cette classe génère la scène 360\n\n------------------------------------------------------------------*/\n\n\nclass Frame360 extends Component {\n  constructor(props) {\n    super(props); // on initialise les refs\n\n    this.frameRef = React.createRef(); // on initialise les states\n\n    this.state = {\n      id: this.props.idRoom,\n      room: this.props.filenameRoom\n    };\n  }\n\n  componentDidMount() {\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n    var camera, scene, renderer;\n    var isUserInteracting = false,\n        onMouseDownMouseX = 0,\n        onMouseDownMouseY = 0,\n        lon = 0,\n        onMouseDownLon = 0,\n        lat = 0,\n        onMouseDownLat = 0,\n        phi = 0,\n        theta = 0; // on récupère la room\n\n    var room = this.state.room; // on active le frame\n\n    var frame = init(room);\n    this.frameRef.appendChild(frame);\n    animate();\n\n    function init(room) {\n      var mesh;\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1100);\n      camera.target = new THREE.Vector3(0, 0, 0);\n      scene = new THREE.Scene();\n      var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward\n\n      geometry.scale(-1, 1, 1);\n      var texture = new THREE.TextureLoader().load(process.env.PUBLIC_URL + '/img/' + room);\n      var material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.addEventListener('mousedown', onPointerStart, false);\n      document.addEventListener('mousemove', onPointerMove, false);\n      document.addEventListener('mouseup', onPointerUp, false);\n      document.addEventListener('wheel', onDocumentMouseWheel, false);\n      document.addEventListener('touchstart', onPointerStart, false);\n      document.addEventListener('touchmove', onPointerMove, false);\n      document.addEventListener('touchend', onPointerUp, false);\n      document.addEventListener('dragover', function (event) {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n      }, false);\n      document.addEventListener('dragenter', function () {\n        document.body.style.opacity = 0.5;\n      }, false);\n      document.addEventListener('dragleave', function () {\n        document.body.style.opacity = 1;\n      }, false);\n      document.addEventListener('drop', function (event) {\n        event.preventDefault();\n        var reader = new FileReader();\n        reader.addEventListener('load', function (event) {\n          material.map.image.src = event.target.result;\n          material.map.needsUpdate = true;\n        }, false);\n        reader.readAsDataURL(event.dataTransfer.files[0]);\n        document.body.style.opacity = 1;\n      }, false); //\n\n      window.addEventListener('resize', onWindowResize, false);\n      return renderer.domElement;\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function onPointerStart(event) {\n      isUserInteracting = true;\n      var clientX = event.clientX || event.touches[0].clientX;\n      var clientY = event.clientY || event.touches[0].clientY;\n      onMouseDownMouseX = clientX;\n      onMouseDownMouseY = clientY;\n      onMouseDownLon = lon;\n      onMouseDownLat = lat;\n    }\n\n    function onPointerMove(event) {\n      if (isUserInteracting === true) {\n        var clientX = event.clientX || event.touches[0].clientX;\n        var clientY = event.clientY || event.touches[0].clientY;\n        lon = (onMouseDownMouseX - clientX) * 0.1 + onMouseDownLon;\n        lat = (clientY - onMouseDownMouseY) * 0.1 + onMouseDownLat;\n      }\n    }\n\n    function onPointerUp() {\n      isUserInteracting = false;\n    }\n\n    function onDocumentMouseWheel(event) {\n      var fov = camera.fov + event.deltaY * 0.05;\n      camera.fov = THREE.Math.clamp(fov, 10, 75);\n      camera.updateProjectionMatrix();\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      update();\n    }\n\n    function update() {\n      lat = Math.max(-85, Math.min(85, lat));\n      phi = THREE.Math.degToRad(90 - lat);\n      theta = THREE.Math.degToRad(lon);\n      camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n      camera.target.y = 500 * Math.cos(phi);\n      camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n      camera.lookAt(camera.target);\n      /*\n      // distortion\n      camera.position.copy( camera.target ).negate();\n      */\n\n      renderer.render(scene, camera);\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itemRoom\",\n      ref: ref => this.frameRef = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }));\n  }\n\n}\n/*---------------------------------------------------------------\n\n                Cette classe génère la scène VR\n\n------------------------------------------------------------------*/\n\n\nclass FrameVR extends Component {\n  constructor(props) {\n    super(props); // on initialise les refs\n\n    this.frameRef = React.createRef();\n    this.btnVRRef = React.createRef(); // on initialise les états\n\n    this.state = {\n      room: this.props.room\n    };\n  }\n\n  componentDidMount() {\n    // on récupère la room\n    var room = this.state.room; // on active le frame\n\n    var returnInit = init(room); // on ajoute le renderer\n\n    this.frameRef.appendChild(returnInit[0]); // on ajoute le bouton VR enable\n\n    this.buttonVRRef.appendChild(returnInit[1]);\n    var camera;\n    var renderer;\n    var scene;\n    animate();\n\n    function init(room) {\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.vr.enabled = true;\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.layers.enable(1);\n      var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward\n\n      geometry.scale(-1, 1, 1);\n      var texture = new THREE.TextureLoader().load(process.env.PUBLIC_URL + '/img/' + room);\n      var material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      var mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      window.addEventListener('resize', onWindowResize, false); // on retourne les éléments à ajouter au dom\n\n      return [renderer.domElement, WEBVR.createButton(renderer, {\n        referenceSpaceType: 'local'\n      })];\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function animate() {\n      renderer.setAnimationLoop(render);\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itemRoom\",\n      ref: ref => this.frameRef = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"vrEnabled\",\n      ref: ref => this.buttonVRRef = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }));\n  }\n\n}\n/*---------------------------------------------------------------\n\nCette classe génère un item de la ligne de pièce\n\n------------------------------------------------------------------*/\n\n\nclass ItemNavRooms extends Component {\n  render() {\n    var filename = process.env.PUBLIC_URL + '/img/' + this.props.filename;\n    return React.createElement(\"div\", {\n      className: \"mb-2 mr-2 p-4 bg-white border-2 rounded-lg border-gray-300 cursor-pointer hover:bg-gray-200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"uppercase font-semibold tracking-wide text-gray-500 text-xs mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, this.props.room), React.createElement(\"img\", {\n      class: \"w-full rounded h-32 object-cover\",\n      src: filename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }));\n  }\n\n}\n/*---------------------------------------------------------------\n\nCette classe génère une ligne de pièces en fonction d'une date\ndonnée par le parent\n\n------------------------------------------------------------------*/\n\n\nclass LineNavRooms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frameVRSize: \"small\",\n      room: \"room4-salon-291019.JPG\"\n    };\n  }\n\n  render() {\n    // on va remplir un tableau d'élément jsx\n    var roomsRender = [];\n    var content = this.props.content;\n    var date = this.props.date; // on scan chaque élément du json\n\n    content.forEach(element => {\n      // on récupère l'id pour pouvoir retrouver facilement les dates dans le composant frame360\n      var id = element.id;\n      var filename = element.filename;\n      var name = element.name; // on donne au parent un tableau contenant la page voulue et la photo 360\n      // on envoit d'abord vers le 360\n\n      var arrayReturn = [\"frame360\", id, filename, date]; // on remplit le tableau\n\n      roomsRender.push(React.createElement(\"div\", {\n        className: \"navRoomsFlex\",\n        onClick: () => this.props.page(arrayReturn),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(ItemNavRooms, {\n        room: name,\n        filename: filename,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      })));\n    });\n    return React.createElement(\"div\", {\n      className: \"my-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"font-bold tracking-wider text-gray-900 text-2xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, this.props.date), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: \"md:flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, roomsRender));\n  }\n\n}\n/*---------------------------------------------------------------\n\n                        Composant HEADER\n\n------------------------------------------------------------------*/\n\n\nfunction Header(props) {\n  var logo;\n\n  if (props.logo != \"\") {\n    logo = React.createElement(\"img\", {\n      src: props.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"header\", {\n    className: \"px-8 py-4 border-t-4 border-indigo-700 shadow bg-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510\n    },\n    __self: this\n  }, logo), React.createElement(\"span\", {\n    className: \"uppercase font-semibold tracking-wider text-gray-900 text-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513\n    },\n    __self: this\n  }, props.text));\n}\n/*---------------------------------------------------------------\n\n                          Boutons\n\n------------------------------------------------------------------*/\n\n\nfunction BtnFilled(props) {\n  return React.createElement(\"button\", {\n    className: \"bg-white hover:bg-gray-200 px-6 py-4 shadow-xl uppercase font-semibold tracking-wider text-gray-900 text-sm rounded-full\",\n    onClick: () => props.changePageOnClick(props.destination),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525\n    },\n    __self: this\n  }, props.text);\n}\n\nfunction BtnBordered(props) {\n  return React.createElement(\"button\", {\n    className: \"bg-white px-4 uppercase font-semibold tracking-wider text-gray-900 text-sm rounded\",\n    onClick: () => props.changePageOnClick(props.destination),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535\n    },\n    __self: this\n  }, props.text);\n}\n/*---------------------------------------------------------------\n\nIci on affiche plusieurs choses différentes selon l'état PAGE.\n- Si page vaut home on affiche le menu\n- Si page vaut frame360 on affiche la sphere draggable\n- Si page vaut frameVR on créé la scene VR\n\n------------------------------------------------------------------*/\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // l'état par défaut de la page est home et il n'y a pas d'image sur la page home d'ou id, date et filename nuls\n\n    this.state = {\n      page: \"home\",\n      id: \"\",\n      filename: \"\",\n      date: \"\"\n    };\n    this.childHandler = this.childHandler.bind(this);\n    this.handleClickNewDate = this.handleClickNewDate.bind(this);\n    this.changePageOnClick = this.changePageOnClick.bind(this);\n  } // on récupère les infos de l'enfant, ici un tableau\n\n\n  childHandler(dataFromChild) {\n    var pageReturn = dataFromChild[0];\n    var idReturn = dataFromChild[1];\n    var filenameReturn = dataFromChild[2];\n    var dateReturn = dataFromChild[3];\n    this.setState({\n      page: pageReturn,\n      id: idReturn,\n      filename: filenameReturn,\n      date: dateReturn\n    });\n  }\n\n  handleClickNewDate(data) {\n    this.setState({\n      filename: data\n    });\n  }\n\n  changePageOnClick(data) {\n    this.setState({\n      page: data\n    });\n  }\n\n  render() {\n    // on va remplir un tableau d'élément jsx\n    var lineRender = []; // on scan chaque élément du json\n\n    rooms.forEach(element => {\n      // on récupère la date\n      var date = element.date; // on rédcupère le sous tableau correspondant à la date\n\n      var content = element.content; // on remplit le tableau qui récupère l'information du click de l'enfant\n\n      lineRender.push(React.createElement(LineNavRooms, {\n        page: this.childHandler,\n        date: date,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }));\n    }); // on dispatch selon l'état\n\n    var page = this.state.page;\n\n    if (page == \"home\") {\n      var pageWrapper = React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, React.createElement(Header, {\n        logo: \"\",\n        text: \"HomeView | Questembert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"w-full px-10 md:w-2/3 md:px-0 md:mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, lineRender));\n    } else if (page == \"frame360\") {\n      var pageWrapper = React.createElement(\"section\", {\n        className: \"FrameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"absolute top-0 left-0 mt-4 ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(BtnFilled, {\n        changePageOnClick: this.changePageOnClick,\n        destination: \"home\",\n        text: \"Retour\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"absolute top-0 right-0 mt-4 mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, React.createElement(BtnFilled, {\n        changePageOnClick: this.changePageOnClick,\n        destination: \"frameVR\",\n        text: \"Voir en VR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      })), React.createElement(NavRoomDates, {\n        currentDate: this.state.date,\n        idRoom: this.state.id,\n        clickDate: this.handleClickNewDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }), React.createElement(Frame360, {\n        filenameRoom: this.state.filename,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }));\n    } else if (page == \"frameVR\") {\n      var pageWrapper = React.createElement(\"section\", {\n        className: \"FrameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"FrameReturn\",\n        onClick: () => this.setState({\n          page: \"home\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, \"Retour\"), React.createElement(FrameVR, {\n        room: this.state.filename,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"section\", {\n      className: \"bg-gray-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, pageWrapper);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 651\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/homeView/src/index.js"],"names":["React","Component","ReactDOM","THREE","WEBVR","rooms","NavRoomDatesItem","render","props","isCurrent","className","process","env","PUBLIC_URL","filename","date","NavRoomDates","currentDate","idRoom","navRender","forEach","element","content","room","id","filenameOtherDate","push","clickDate","Frame360","constructor","frameRef","createRef","state","filenameRoom","componentDidMount","camera","scene","renderer","isUserInteracting","onMouseDownMouseX","onMouseDownMouseY","lon","onMouseDownLon","lat","onMouseDownLat","phi","theta","frame","init","appendChild","animate","mesh","PerspectiveCamera","window","innerWidth","innerHeight","target","Vector3","Scene","geometry","SphereBufferGeometry","scale","texture","TextureLoader","load","material","MeshBasicMaterial","map","Mesh","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","document","addEventListener","onPointerStart","onPointerMove","onPointerUp","onDocumentMouseWheel","event","preventDefault","dataTransfer","dropEffect","body","style","opacity","reader","FileReader","image","src","result","needsUpdate","readAsDataURL","files","onWindowResize","domElement","aspect","updateProjectionMatrix","clientX","touches","clientY","fov","deltaY","Math","clamp","requestAnimationFrame","update","max","min","degToRad","x","sin","cos","y","z","lookAt","ref","FrameVR","btnVRRef","returnInit","buttonVRRef","vr","enabled","layers","enable","createButton","referenceSpaceType","setAnimationLoop","ItemNavRooms","LineNavRooms","frameVRSize","roomsRender","name","arrayReturn","page","Header","logo","text","BtnFilled","changePageOnClick","destination","BtnBordered","App","childHandler","bind","handleClickNewDate","dataFromChild","pageReturn","idReturn","filenameReturn","dateReturn","setState","data","lineRender","pageWrapper","rootElement","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n//import \"./index.css\";\nimport './styles/tailwind.css';\nimport rooms from \"./json/rooms.json\";\n/*=================================================================\n                  STRUCTURE DES COMPOSANTS\n===================================================================\n\nOn navigue dans le composant App:\nSur la page d'accueil d'état HOME les scenes sont classées par date.\n\nOn a un composant qui génère une ligne de pièce par date.\n  Dans ce composant, un autre génère l'item clickable.\n\nAu clic on renvoit au composant App les informations de la scène cliquée.\nOn affiche alors un frame360 dont l'image est celle renvoyée par le click dans le menu.\n\n*/\n\n\n/*------------------------------------------------------------------------------\n\n  Cette classe génère l'affichage de l'item de navigation dans\n  une pièce à une date différente\n\n--------------------------------------------------------------------------------*/\n\n\nclass NavRoomDatesItem extends Component {\n\n  render(){\n    if(this.props.isCurrent){\n      var className = \"h-20 relative mx-4 w-10 border-4 border-white rounded overflow-hidden\";\n    }\n    else{\n      var className = \"h-20 relative mx-4 px-4 border-2 border-gray-300 rounded overflow-hidden\";\n    }\n    return(\n      <div className={className}>\n        <img className=\"h-20 object-cover\" src={process.env.PUBLIC_URL + '/img/'+this.props.filename}/>\n        <span className=\"absolute bottom-0 py-1 bg-gray-100 w-full text-center uppercase font-semibold tracking-wide text-gray-500 text-xs\" >{this.props.date}</span>\n      </div>\n    )\n  }\n\n\n}\n\n/*------------------------------------------------------------------------------\n\n  Cette classe génère la liste des différentes dates de modification d'une pièce\n\n--------------------------------------------------------------------------------*/\n\n\nclass NavRoomDates extends Component {\n\n  render(){\n    var currentDate = this.props.currentDate;\n    var idRoom = this.props.idRoom;\n    var navRender = [];\n\n    // on scan chaque élément du json\n    rooms.forEach((element) => {\n      // on récupère la date\n      var date = element.date;\n      var content = element.content;\n\n      content.forEach((room) => {\n        if(room.id==idRoom){\n          var filenameOtherDate = room.filename;\n          var isCurrent = false;\n          if(currentDate==date){\n            isCurrent = true;\n          }\n\n          navRender.push(<div onClick={()=>this.props.clickDate(filenameOtherDate)}><NavRoomDatesItem  isCurrent={isCurrent} date={date} filename={filenameOtherDate}/></div>)\n\n        }\n      });\n\n\n\n\n    });\n\n    return(\n      <div className=\"absolute mt-6 w-full flex justify-center items-center\">{navRender}</div>\n    )\n  }\n\n\n}\n\n/*---------------------------------------------------------------\n\n            Cette classe génère la scène 360\n\n------------------------------------------------------------------*/\n\nclass Frame360 extends Component {\n  constructor(props) {\n    super(props);\n\n    // on initialise les refs\n    this.frameRef = React.createRef();\n\n    // on initialise les states\n    this.state = {\n        id: this.props.idRoom,\n        room: this.props.filenameRoom\n       };\n  }\n  componentDidMount() {\n\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n\n    var camera, scene, renderer;\n\n\t\tvar isUserInteracting = false,\n\t\t\t\tonMouseDownMouseX = 0, onMouseDownMouseY = 0,\n\t\t\t\tlon = 0, onMouseDownLon = 0,\n\t\t\t\tlat = 0, onMouseDownLat = 0,\n\t\t\t\tphi = 0, theta = 0;\n\n    // on récupère la room\n    var room = this.state.room;\n\n    // on active le frame\n    var frame = init(room);\n\n    this.frameRef.appendChild( frame );\n\t\tanimate();\n\n\n\n\n    function init(room) {\n\n        var mesh;\n\n\n        camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1100 );\n        camera.target = new THREE.Vector3( 0, 0, 0 );\n\n        scene = new THREE.Scene();\n\n        var geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n        // invert the geometry on the x-axis so that all of the faces point inward\n        geometry.scale( -1, 1, 1 );\n\n        var texture = new THREE.TextureLoader().load( process.env.PUBLIC_URL + '/img/'+room );\n\n        var material = new THREE.MeshBasicMaterial( { map: texture } );\n\n        mesh = new THREE.Mesh( geometry, material );\n\n        scene.add( mesh );\n\n        renderer = new THREE.WebGLRenderer();\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n        document.addEventListener( 'mousedown', onPointerStart, false );\n        document.addEventListener( 'mousemove', onPointerMove, false );\n        document.addEventListener( 'mouseup', onPointerUp, false );\n\n        document.addEventListener( 'wheel', onDocumentMouseWheel, false );\n\n        document.addEventListener( 'touchstart', onPointerStart, false );\n        document.addEventListener( 'touchmove', onPointerMove, false );\n        document.addEventListener( 'touchend', onPointerUp, false );\n\n\n        document.addEventListener( 'dragover', function ( event ) {\n\n          event.preventDefault();\n          event.dataTransfer.dropEffect = 'copy';\n\n        }, false );\n\n        document.addEventListener( 'dragenter', function () {\n\n          document.body.style.opacity = 0.5;\n\n        }, false );\n\n        document.addEventListener( 'dragleave', function () {\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        document.addEventListener( 'drop', function ( event ) {\n\n          event.preventDefault();\n\n          var reader = new FileReader();\n          reader.addEventListener( 'load', function ( event ) {\n\n            material.map.image.src = event.target.result;\n            material.map.needsUpdate = true;\n\n          }, false );\n          reader.readAsDataURL( event.dataTransfer.files[ 0 ] );\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        //\n\n        window.addEventListener( 'resize', onWindowResize, false );\n\n        return(renderer.domElement);\n      }\n\n\n    function onWindowResize() {\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n      }\n\n    function onPointerStart( event ) {\n        isUserInteracting = true;\n\n        var clientX = event.clientX || event.touches[ 0 ].clientX;\n        var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n        onMouseDownMouseX = clientX;\n        onMouseDownMouseY = clientY;\n\n        onMouseDownLon = lon;\n        onMouseDownLat = lat;\n\n      }\n\n    function onPointerMove( event ) {\n        if ( isUserInteracting === true ) {\n\n          var clientX = event.clientX || event.touches[ 0 ].clientX;\n          var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n          lon = ( onMouseDownMouseX - clientX ) * 0.1 + onMouseDownLon;\n          lat = ( clientY - onMouseDownMouseY ) * 0.1 + onMouseDownLat;\n\n        }\n\n      }\n\n    function onPointerUp() {\n\n        isUserInteracting = false;\n\n      }\n\n    function onDocumentMouseWheel( event ) {\n        var fov = camera.fov + event.deltaY * 0.05;\n\n        camera.fov = THREE.Math.clamp( fov, 10, 75 );\n\n        camera.updateProjectionMatrix();\n\n      }\n\n    function animate() {\n\n\n        requestAnimationFrame( animate );\n        update();\n\n      }\n\n    function update() {\n\n        lat = Math.max( - 85, Math.min( 85, lat ) );\n        phi = THREE.Math.degToRad( 90 - lat );\n        theta = THREE.Math.degToRad( lon );\n\n        camera.target.x = 500 * Math.sin( phi ) * Math.cos( theta );\n        camera.target.y = 500 * Math.cos( phi );\n        camera.target.z = 500 * Math.sin( phi ) * Math.sin( theta );\n\n        camera.lookAt( camera.target );\n\n        /*\n        // distortion\n        camera.position.copy( camera.target ).negate();\n        */\n\n        renderer.render( scene, camera );\n\n      }\n\n  }\n\n\n  render() {\n    return (\n      <section>\n        <div className=\"itemRoom\" ref={ref => (this.frameRef = ref)} />\n      </section>\n    )\n  }\n}\n/*---------------------------------------------------------------\n\n                Cette classe génère la scène VR\n\n------------------------------------------------------------------*/\nclass FrameVR extends Component {\n  constructor(props) {\n    super(props);\n\n    // on initialise les refs\n    this.frameRef = React.createRef();\n    this.btnVRRef = React.createRef();\n\n    // on initialise les états\n    this.state = {\n       room: this.props.room\n       };\n  }\n  componentDidMount() {\n\n\n    // on récupère la room\n    var room = this.state.room;\n\n    // on active le frame\n    var returnInit = init(room);\n\n    // on ajoute le renderer\n    this.frameRef.appendChild( returnInit[0] );\n\n    // on ajoute le bouton VR enable\n    this.buttonVRRef.appendChild( returnInit[1] );\n\n    var camera;\n  \tvar renderer;\n  \tvar scene;\n\n  \tanimate();\n\n  \tfunction init(room) {\n\n  \t\trenderer = new THREE.WebGLRenderer();\n  \t\trenderer.setPixelRatio( window.devicePixelRatio );\n  \t\trenderer.setSize( window.innerWidth, window.innerHeight );\n  \t\trenderer.vr.enabled = true;\n\n  \t\tscene = new THREE.Scene();\n\n  \t\tcamera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 1, 1000 );\n  \t\tcamera.layers.enable( 1 );\n\n      var geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n      // invert the geometry on the x-axis so that all of the faces point inward\n      geometry.scale( -1, 1, 1 );\n\n      var texture = new THREE.TextureLoader().load( process.env.PUBLIC_URL + '/img/'+room );\n\n      var material = new THREE.MeshBasicMaterial( { map: texture } );\n\n      var mesh = new THREE.Mesh( geometry, material );\n\n      scene.add( mesh );\n\n  \t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n      // on retourne les éléments à ajouter au dom\n  \t\treturn [renderer.domElement, WEBVR.createButton( renderer, { referenceSpaceType: 'local' } )];\n\n  \t}\n\n\n  \tfunction onWindowResize() {\n\n  \t\tcamera.aspect = window.innerWidth / window.innerHeight;\n  \t\tcamera.updateProjectionMatrix();\n\n  \t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n  \t}\n\n  \tfunction animate() {\n\n  \t\trenderer.setAnimationLoop( render );\n\n  \t}\n\n  \tfunction render() {\n\n  \t\trenderer.render( scene, camera );\n\n  \t}\n\n\n\n  }\n\n\n  render() {\n    return (\n        <section>\n          <div className=\"itemRoom\" ref={ref => (this.frameRef = ref)} />\n          <div className=\"vrEnabled\" ref={ref => (this.buttonVRRef = ref)}/>\n        </section>\n    )\n  }\n}\n\n\n\n\n/*---------------------------------------------------------------\n\nCette classe génère un item de la ligne de pièce\n\n------------------------------------------------------------------*/\nclass ItemNavRooms extends Component {\n\n  render(){\n    var filename = process.env.PUBLIC_URL + '/img/'+this.props.filename;\n    return(\n      <div className=\"mb-2 mr-2 p-4 bg-white border-2 rounded-lg border-gray-300 cursor-pointer hover:bg-gray-200\">\n        <div className=\"uppercase font-semibold tracking-wide text-gray-500 text-xs mb-2\">{this.props.room}</div>\n        <img class=\"w-full rounded h-32 object-cover\" src={filename}/>\n      </div>\n    )\n\n  }\n\n\n}\n\n/*---------------------------------------------------------------\n\nCette classe génère une ligne de pièces en fonction d'une date\ndonnée par le parent\n\n------------------------------------------------------------------*/\nclass LineNavRooms extends Component {\n  constructor(props) {\n      super(props)\n      this.state = {\n          frameVRSize: \"small\",\n          room: \"room4-salon-291019.JPG\"\n      };\n  }\n\n\n\n\n  render() {\n\n    // on va remplir un tableau d'élément jsx\n    var roomsRender = [];\n    var content = this.props.content;\n    var date = this.props.date;\n    // on scan chaque élément du json\n    content.forEach((element) => {\n\n      // on récupère l'id pour pouvoir retrouver facilement les dates dans le composant frame360\n      var id = element.id;\n      var filename = element.filename;\n\n      var name = element.name;\n\n      // on donne au parent un tableau contenant la page voulue et la photo 360\n      // on envoit d'abord vers le 360\n      var arrayReturn = [\"frame360\", id, filename, date];\n\n      // on remplit le tableau\n      roomsRender.push(<div className=\"navRoomsFlex\" onClick={()=> this.props.page(arrayReturn)} ><ItemNavRooms room={name} filename={filename}/></div>);\n    });\n\n    return (\n      <div className=\"my-10\">\n        <div className=\"font-bold tracking-wider text-gray-900 text-2xl\">{this.props.date}</div><br/>\n        <nav className=\"md:flex\">\n          {/*<SelectRoom action={this.childHandler}/>*/}\n\n          {roomsRender}\n        </nav>\n      </div>\n    )\n  }\n}\n/*---------------------------------------------------------------\n\n                        Composant HEADER\n\n------------------------------------------------------------------*/\nfunction Header(props){\n  var logo;\n  if(props.logo!=\"\"){\n    logo = <img src={props.logo}/>\n  }\n  return(\n    <header className=\"px-8 py-4 border-t-4 border-indigo-700 shadow bg-white\">\n      <div>\n        {logo}\n      </div>\n      <span className=\"uppercase font-semibold tracking-wider text-gray-900 text-sm\">{props.text}</span>\n    </header>\n  )\n}\n\n/*---------------------------------------------------------------\n\n                          Boutons\n\n------------------------------------------------------------------*/\nfunction BtnFilled(props){\n  return(\n    <button\n      className=\"bg-white hover:bg-gray-200 px-6 py-4 shadow-xl uppercase font-semibold tracking-wider text-gray-900 text-sm rounded-full\"\n      onClick={()=>props.changePageOnClick(props.destination)}>\n      {props.text}\n    </button>\n  )\n}\n\nfunction BtnBordered(props){\n  return(\n    <button\n      className=\"bg-white px-4 uppercase font-semibold tracking-wider text-gray-900 text-sm rounded\"\n      onClick={()=>props.changePageOnClick(props.destination)}\n    >\n      {props.text}\n    </button>\n  )\n}\n\n/*---------------------------------------------------------------\n\nIci on affiche plusieurs choses différentes selon l'état PAGE.\n- Si page vaut home on affiche le menu\n- Si page vaut frame360 on affiche la sphere draggable\n- Si page vaut frameVR on créé la scene VR\n\n------------------------------------------------------------------*/\nclass App extends Component {\n  constructor(props) {\n      super(props)\n      // l'état par défaut de la page est home et il n'y a pas d'image sur la page home d'ou id, date et filename nuls\n      this.state = {\n          page: \"home\",\n          id: \"\",\n          filename: \"\",\n          date: \"\"\n\n      };\n      this.childHandler = this.childHandler.bind(this);\n      this.handleClickNewDate = this.handleClickNewDate.bind(this)\n      this.changePageOnClick = this.changePageOnClick.bind(this)\n\n  }\n\n\n  // on récupère les infos de l'enfant, ici un tableau\n  childHandler(dataFromChild) {\n\n        var pageReturn = dataFromChild[0];\n        var idReturn = dataFromChild[1];\n        var filenameReturn = dataFromChild[2];\n        var dateReturn = dataFromChild[3];\n        this.setState({\n            page: pageReturn,\n            id: idReturn,\n            filename: filenameReturn,\n            date: dateReturn\n        });\n\n  }\n\n  handleClickNewDate(data){\n    this.setState({\n        filename: data\n    });\n  }\n\n  changePageOnClick(data){\n    this.setState({\n        page: data\n    });\n  }\n\n  render() {\n\n    // on va remplir un tableau d'élément jsx\n    var lineRender = [];\n    // on scan chaque élément du json\n    rooms.forEach((element) => {\n      // on récupère la date\n      var date = element.date;\n\n      // on rédcupère le sous tableau correspondant à la date\n      var content = element.content;\n\n      // on remplit le tableau qui récupère l'information du click de l'enfant\n      lineRender.push(<LineNavRooms page={this.childHandler} date={date} content={content}/>);\n    });\n\n    // on dispatch selon l'état\n    var page = this.state.page;\n    if(page==\"home\"){\n      var pageWrapper = <section>\n                          <Header logo=\"\" text=\"HomeView | Questembert\"/>\n                          <section className=\"w-full px-10 md:w-2/3 md:px-0 md:mx-auto\">{lineRender}</section>\n                        </section>\n    }\n    else if(page==\"frame360\"){\n      var pageWrapper = <section className=\"FrameContainer\">\n                          <div className=\"absolute top-0 left-0 mt-4 ml-4\">\n                            <BtnFilled changePageOnClick={this.changePageOnClick} destination=\"home\" text=\"Retour\"/>\n                          </div>\n                          <div className=\"absolute top-0 right-0 mt-4 mr-4\">\n                            <BtnFilled changePageOnClick={this.changePageOnClick} destination=\"frameVR\" text=\"Voir en VR\"/>\n                          </div>\n                          <NavRoomDates currentDate={this.state.date} idRoom={this.state.id} clickDate={this.handleClickNewDate}/>\n                          <Frame360 filenameRoom={this.state.filename}/>\n                        </section>\n    }\n    else if(page==\"frameVR\"){\n      var pageWrapper = <section className=\"FrameContainer\">\n                          <span className=\"FrameReturn\" onClick={()=>this.setState({page:\"home\"})}>Retour</span>\n                          <FrameVR room={this.state.filename}/>\n                        </section>\n    }\n\n    return (\n      <section className=\"bg-gray-100\">\n\n        {pageWrapper}\n      </section>\n    )\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}