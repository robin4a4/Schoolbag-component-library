{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/homeView/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderer: ''\n    };\n  }\n\n  componentDidMount() {\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n    init();\n    animate();\n\n    function init() {\n      var mesh, camera, renderer, geometry, material, texture, scene;\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1100);\n      camera.target = new THREE.Vector3(0, 0, 0);\n      scene = new THREE.Scene();\n      var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward\n\n      geometry.scale(-1, 1, 1);\n      var texture = new THREE.TextureLoader().load('img/IMG_7233.JPG');\n      var material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight); //this.mount.appendChild( renderer.domElement );\n\n      document.body.appendChild(renderer.domElement);\n      document.addEventListener('mousedown', onPointerStart, false);\n      document.addEventListener('mousemove', onPointerMove, false);\n      document.addEventListener('mouseup', onPointerUp, false);\n      document.addEventListener('wheel', onDocumentMouseWheel, false);\n      document.addEventListener('touchstart', onPointerStart, false);\n      document.addEventListener('touchmove', onPointerMove, false);\n      document.addEventListener('touchend', onPointerUp, false); //\n\n      document.addEventListener('dragover', function (event) {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n      }, false);\n      document.addEventListener('dragenter', function () {\n        document.body.style.opacity = 0.5;\n      }, false);\n      document.addEventListener('dragleave', function () {\n        document.body.style.opacity = 1;\n      }, false);\n      document.addEventListener('drop', function (event) {\n        event.preventDefault();\n        var reader = new FileReader();\n        reader.addEventListener('load', function (event) {\n          material.map.image.src = event.target.result;\n          material.map.needsUpdate = true;\n        }, false);\n        reader.readAsDataURL(event.dataTransfer.files[0]);\n        document.body.style.opacity = 1;\n      }, false); //\n\n      window.addEventListener('resize', onWindowResize, false);\n    }\n\n    function onWindowResize() {\n      var camera, renderer;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function onPointerStart(event) {\n      var isUserInteracting, clientX, clientY, onMouseDownMouseX, onMouseDownMouseY, onMouseDownLon, onMouseDownLat, lon, lat;\n      isUserInteracting = true;\n      var clientX = event.clientX || event.touches[0].clientX;\n      var clientY = event.clientY || event.touches[0].clientY;\n      onMouseDownMouseX = clientX;\n      onMouseDownMouseY = clientY;\n      onMouseDownLon = lon;\n      onMouseDownLat = lat;\n    }\n\n    function onPointerMove(event) {\n      var isUserInteracting, clientX, clientY, onMouseDownMouseX, onMouseDownMouseY, onMouseDownLon, onMouseDownLat, lon, lat;\n\n      if (isUserInteracting === true) {\n        var clientX = event.clientX || event.touches[0].clientX;\n        var clientY = event.clientY || event.touches[0].clientY;\n        lon = (onMouseDownMouseX - clientX) * 0.1 + onMouseDownLon;\n        lat = (clientY - onMouseDownMouseY) * 0.1 + onMouseDownLat;\n      }\n    }\n\n    function onPointerUp() {\n      var isUserInteracting;\n      isUserInteracting = false;\n    }\n\n    function onDocumentMouseWheel(event) {\n      var camera;\n      var fov = camera.fov + event.deltaY * 0.05;\n      camera.fov = THREE.Math.clamp(fov, 10, 75);\n      camera.updateProjectionMatrix();\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      update();\n    }\n\n    function update() {\n      var isUserInteracting, phi, theta, scene, lon, lat, camera, renderer;\n\n      if (isUserInteracting === false) {\n        lon += 0.1;\n      }\n\n      lat = Math.max(-85, Math.min(85, lat));\n      phi = THREE.Math.degToRad(90 - lat);\n      theta = THREE.Math.degToRad(lon);\n      camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n      camera.target.y = 500 * Math.cos(phi);\n      camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n      camera.lookAt(camera.target);\n      /*\n      // distortion\n      camera.position.copy( camera.target ).negate();\n      */\n\n      renderer.render(scene, camera);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      ref: this.state.renderer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 205\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/homeView/src/index.js"],"names":["React","Component","ReactDOM","THREE","WEBVR","App","constructor","props","state","renderer","componentDidMount","init","animate","mesh","camera","geometry","material","texture","scene","PerspectiveCamera","window","innerWidth","innerHeight","target","Vector3","Scene","SphereBufferGeometry","scale","TextureLoader","load","MeshBasicMaterial","map","Mesh","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","document","body","appendChild","domElement","addEventListener","onPointerStart","onPointerMove","onPointerUp","onDocumentMouseWheel","event","preventDefault","dataTransfer","dropEffect","style","opacity","reader","FileReader","image","src","result","needsUpdate","readAsDataURL","files","onWindowResize","aspect","updateProjectionMatrix","isUserInteracting","clientX","clientY","onMouseDownMouseX","onMouseDownMouseY","onMouseDownLon","onMouseDownLat","lon","lat","touches","fov","deltaY","Math","clamp","requestAnimationFrame","update","phi","theta","max","min","degToRad","x","sin","cos","y","z","lookAt","render","ref","mount","rootElement","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderer: ''};\n  }\n  componentDidMount() {\n\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n    init();\n\t\tanimate();\n    function init() {\n\n        var mesh, camera, renderer, geometry, material, texture, scene;\n\n\n        camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1100 );\n        camera.target = new THREE.Vector3( 0, 0, 0 );\n\n        scene = new THREE.Scene();\n\n        var geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n        // invert the geometry on the x-axis so that all of the faces point inward\n        geometry.scale( - 1, 1, 1 );\n\n        var texture = new THREE.TextureLoader().load( 'img/IMG_7233.JPG' );\n        var material = new THREE.MeshBasicMaterial( { map: texture } );\n\n        mesh = new THREE.Mesh( geometry, material );\n\n        scene.add( mesh );\n\n        renderer = new THREE.WebGLRenderer();\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n        //this.mount.appendChild( renderer.domElement );\n\n        document.body.appendChild( renderer.domElement );\n\n        document.addEventListener( 'mousedown', onPointerStart, false );\n        document.addEventListener( 'mousemove', onPointerMove, false );\n        document.addEventListener( 'mouseup', onPointerUp, false );\n\n        document.addEventListener( 'wheel', onDocumentMouseWheel, false );\n\n        document.addEventListener( 'touchstart', onPointerStart, false );\n        document.addEventListener( 'touchmove', onPointerMove, false );\n        document.addEventListener( 'touchend', onPointerUp, false );\n\n        //\n\n        document.addEventListener( 'dragover', function ( event ) {\n\n          event.preventDefault();\n          event.dataTransfer.dropEffect = 'copy';\n\n        }, false );\n\n        document.addEventListener( 'dragenter', function () {\n\n          document.body.style.opacity = 0.5;\n\n        }, false );\n\n        document.addEventListener( 'dragleave', function () {\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        document.addEventListener( 'drop', function ( event ) {\n\n          event.preventDefault();\n\n          var reader = new FileReader();\n          reader.addEventListener( 'load', function ( event ) {\n\n            material.map.image.src = event.target.result;\n            material.map.needsUpdate = true;\n\n          }, false );\n          reader.readAsDataURL( event.dataTransfer.files[ 0 ] );\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        //\n\n        window.addEventListener( 'resize', onWindowResize, false );\n\n      }\n\n    function onWindowResize() {\n        var camera, renderer;\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n      }\n\n    function onPointerStart( event ) {\n        var isUserInteracting, clientX, clientY, onMouseDownMouseX, onMouseDownMouseY, onMouseDownLon, onMouseDownLat, lon, lat;\n        isUserInteracting = true;\n\n        var clientX = event.clientX || event.touches[ 0 ].clientX;\n        var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n        onMouseDownMouseX = clientX;\n        onMouseDownMouseY = clientY;\n\n        onMouseDownLon = lon;\n        onMouseDownLat = lat;\n\n      }\n\n    function onPointerMove( event ) {\n        var isUserInteracting, clientX, clientY, onMouseDownMouseX, onMouseDownMouseY, onMouseDownLon, onMouseDownLat, lon, lat;\n        if ( isUserInteracting === true ) {\n\n          var clientX = event.clientX || event.touches[ 0 ].clientX;\n          var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n          lon = ( onMouseDownMouseX - clientX ) * 0.1 + onMouseDownLon;\n          lat = ( clientY - onMouseDownMouseY ) * 0.1 + onMouseDownLat;\n\n        }\n\n      }\n\n    function onPointerUp() {\n      var isUserInteracting;\n\n        isUserInteracting = false;\n\n      }\n\n    function onDocumentMouseWheel( event ) {\n        var camera;\n        var fov = camera.fov + event.deltaY * 0.05;\n\n        camera.fov = THREE.Math.clamp( fov, 10, 75 );\n\n        camera.updateProjectionMatrix();\n\n      }\n\n    function animate() {\n\n        requestAnimationFrame( animate );\n        update();\n\n      }\n\n    function update() {\n        var isUserInteracting, phi, theta, scene, lon, lat, camera, renderer;\n\n        if ( isUserInteracting === false ) {\n\n          lon += 0.1;\n\n        }\n\n        lat = Math.max( - 85, Math.min( 85, lat ) );\n        phi = THREE.Math.degToRad( 90 - lat );\n        theta = THREE.Math.degToRad( lon );\n\n        camera.target.x = 500 * Math.sin( phi ) * Math.cos( theta );\n        camera.target.y = 500 * Math.cos( phi );\n        camera.target.z = 500 * Math.sin( phi ) * Math.sin( theta );\n\n        camera.lookAt( camera.target );\n\n        /*\n        // distortion\n        camera.position.copy( camera.target ).negate();\n        */\n\n        renderer.render( scene, camera );\n\n      }\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div ref={ref => (this.mount = ref)} />\n        <button ref={ this.state.renderer  }></button>\n      </div>\n    )\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}