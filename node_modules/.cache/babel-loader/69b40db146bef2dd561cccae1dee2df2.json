{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/homeView/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth / 2, window.innerHeight / 2); // on ajoute l'élément au composant react\n\n    this.mount.appendChild(renderer.domElement); // creation de la 3D\n\n    var light = new THREE.AmbientLight(0x404040);\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshNormalMaterial({\n      color: 0x0033ff\n    });\n    var cube = new THREE.Mesh(geometry, material); // on ajoute les éléments à la scene\n\n    scene.add(cube);\n    scene.add(light); // on gere la position de la camera\n\n    camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/homeView/src/index.js"],"names":["React","Component","ReactDOM","THREE","App","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","light","AmbientLight","geometry","BoxGeometry","material","MeshNormalMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","ref","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAV,EAAZ;AACA,QAAIC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAA1D,EAAuE,GAAvE,EAA4E,IAA5E,CAAb;AACA,QAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAV,EAAf;AACAD,IAAAA,QAAQ,CAACE,OAAT,CAAkBL,MAAM,CAACC,UAAP,GAAkB,CAApC,EAAuCD,MAAM,CAACE,WAAP,GAAmB,CAA1D,EAJkB,CAMlB;;AACA,SAAKI,KAAL,CAAWC,WAAX,CAAwBJ,QAAQ,CAACK,UAAjC,EAPkB,CASlB;;AACA,QAAIC,KAAK,GAAG,IAAIhB,KAAK,CAACiB,YAAV,CAAwB,QAAxB,CAAZ;AACA,QAAIC,QAAQ,GAAG,IAAIlB,KAAK,CAACmB,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAf;AACA,QAAIC,QAAQ,GAAG,IAAIpB,KAAK,CAACqB,kBAAV,CAA8B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA9B,CAAf;AACA,QAAIC,IAAI,GAAG,IAAIvB,KAAK,CAACwB,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAX,CAbkB,CAelB;;AACAjB,IAAAA,KAAK,CAACsB,GAAN,CAAWF,IAAX;AACApB,IAAAA,KAAK,CAACsB,GAAN,CAAWT,KAAX,EAjBkB,CAkBlB;;AACAX,IAAAA,MAAM,CAACqB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AACA,QAAIC,OAAO,GAAG,YAAY;AACxBC,MAAAA,qBAAqB,CAAED,OAAF,CAArB;AACAL,MAAAA,IAAI,CAACO,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AACAR,MAAAA,IAAI,CAACO,QAAL,CAAcE,CAAd,IAAmB,IAAnB;AACAtB,MAAAA,QAAQ,CAACuB,MAAT,CAAiB9B,KAAjB,EAAwBE,MAAxB;AACD,KALD;;AAMAuB,IAAAA,OAAO;AACR;;AACDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAEC,GAAG,IAAK,KAAKrB,KAAL,GAAaqB,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAjCyB;;AAmC5B,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAtC,QAAQ,CAACkC,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBE,WAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nclass App extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize( window.innerWidth/2, window.innerHeight/2 );\n\n    // on ajoute l'élément au composant react\n    this.mount.appendChild( renderer.domElement );\n\n    // creation de la 3D\n    var light = new THREE.AmbientLight( 0x404040 );\n    var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    var material = new THREE.MeshNormalMaterial( { color: 0x0033ff} );\n    var cube = new THREE.Mesh( geometry, material );\n\n    // on ajoute les éléments à la scene\n    scene.add( cube );\n    scene.add( light );\n    // on gere la position de la camera\n    camera.position.z = 5;\n    var animate = function () {\n      requestAnimationFrame( animate );\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render( scene, camera );\n    };\n    animate();\n  }\n  render() {\n    return (\n      <div ref={ref => (this.mount = ref)} />\n    )\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}