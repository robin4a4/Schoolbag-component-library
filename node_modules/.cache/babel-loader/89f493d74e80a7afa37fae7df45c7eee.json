{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/homeView/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderer: ''\n    };\n  }\n\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer(); // on active la VR\n\n    renderer.vr.enabled = true; // on resize le renderer\n\n    renderer.setSize(window.innerWidth / 2, window.innerHeight / 2);\n    this.setState({\n      renderer: WEBVR.createButton(renderer, {\n        referenceSpaceType: 'local'\n      })\n    }); // on ajoute l'élément au composant react\n\n    this.mount.appendChild(renderer.domElement); // creation de la 3D\n\n    var light = new THREE.DirectionalLight(0xffffff);\n    light.position.set(0, 1, 1).normalize();\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshPhongMaterial({\n      ambient: 0x050505,\n      color: 0xFF0000,\n      specular: 0x555555,\n      shininess: 30\n    });\n    var cube = new THREE.Mesh(geometry, material); // on ajoute les éléments à la scene\n\n    scene.add(cube);\n    scene.add(light); // on gere la position de la camera\n\n    camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  init() {\n    var container, mesh;\n    container = document.getElementById('container');\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1100);\n    camera.target = new THREE.Vector3(0, 0, 0);\n    scene = new THREE.Scene();\n    var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward\n\n    geometry.scale(-1, 1, 1);\n    var texture = new THREE.TextureLoader().load('textures/2294472375_24a3b8ef46_o.jpg');\n    var material = new THREE.MeshBasicMaterial({\n      map: texture\n    });\n    mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n    renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n    document.addEventListener('mousedown', onPointerStart, false);\n    document.addEventListener('mousemove', onPointerMove, false);\n    document.addEventListener('mouseup', onPointerUp, false);\n    document.addEventListener('wheel', onDocumentMouseWheel, false);\n    document.addEventListener('touchstart', onPointerStart, false);\n    document.addEventListener('touchmove', onPointerMove, false);\n    document.addEventListener('touchend', onPointerUp, false); //\n\n    document.addEventListener('dragover', function (event) {\n      event.preventDefault();\n      event.dataTransfer.dropEffect = 'copy';\n    }, false);\n    document.addEventListener('dragenter', function () {\n      document.body.style.opacity = 0.5;\n    }, false);\n    document.addEventListener('dragleave', function () {\n      document.body.style.opacity = 1;\n    }, false);\n    document.addEventListener('drop', function (event) {\n      event.preventDefault();\n      var reader = new FileReader();\n      reader.addEventListener('load', function (event) {\n        material.map.image.src = event.target.result;\n        material.map.needsUpdate = true;\n      }, false);\n      reader.readAsDataURL(event.dataTransfer.files[0]);\n      document.body.style.opacity = 1;\n    }, false); //\n\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  onPointerStart(event) {\n    isUserInteracting = true;\n    var clientX = event.clientX || event.touches[0].clientX;\n    var clientY = event.clientY || event.touches[0].clientY;\n    onMouseDownMouseX = clientX;\n    onMouseDownMouseY = clientY;\n    onMouseDownLon = lon;\n    onMouseDownLat = lat;\n  }\n\n  onPointerMove(event) {\n    if (isUserInteracting === true) {\n      var clientX = event.clientX || event.touches[0].clientX;\n      var clientY = event.clientY || event.touches[0].clientY;\n      lon = (onMouseDownMouseX - clientX) * 0.1 + onMouseDownLon;\n      lat = (clientY - onMouseDownMouseY) * 0.1 + onMouseDownLat;\n    }\n  }\n\n  onPointerUp() {\n    isUserInteracting = false;\n  }\n\n  onDocumentMouseWheel(event) {\n    var fov = camera.fov + event.deltaY * 0.05;\n    camera.fov = THREE.Math.clamp(fov, 10, 75);\n    camera.updateProjectionMatrix();\n  }\n\n  animate() {\n    requestAnimationFrame(animate);\n    update();\n  }\n\n  update() {\n    if (isUserInteracting === false) {\n      lon += 0.1;\n    }\n\n    lat = Math.max(-85, Math.min(85, lat));\n    phi = THREE.Math.degToRad(90 - lat);\n    theta = THREE.Math.degToRad(lon);\n    camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n    camera.target.y = 500 * Math.cos(phi);\n    camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n    camera.lookAt(camera.target);\n    /*\n    // distortion\n    camera.position.copy( camera.target ).negate();\n    */\n\n    renderer.render(scene, camera);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      ref: this.state.renderer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 229\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/homeView/src/index.js"],"names":["React","Component","ReactDOM","THREE","WEBVR","App","constructor","props","state","renderer","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","vr","enabled","setSize","setState","createButton","referenceSpaceType","mount","appendChild","domElement","light","DirectionalLight","position","set","normalize","geometry","BoxGeometry","material","MeshPhongMaterial","ambient","color","specular","shininess","cube","Mesh","add","z","animate","requestAnimationFrame","rotation","x","y","render","init","container","mesh","document","getElementById","target","Vector3","SphereBufferGeometry","scale","texture","TextureLoader","load","MeshBasicMaterial","map","setPixelRatio","devicePixelRatio","addEventListener","onPointerStart","onPointerMove","onPointerUp","onDocumentMouseWheel","event","preventDefault","dataTransfer","dropEffect","body","style","opacity","reader","FileReader","image","src","result","needsUpdate","readAsDataURL","files","onWindowResize","aspect","updateProjectionMatrix","isUserInteracting","clientX","touches","clientY","onMouseDownMouseX","onMouseDownMouseY","onMouseDownLon","lon","onMouseDownLat","lat","fov","deltaY","Math","clamp","update","max","min","phi","degToRad","theta","sin","cos","lookAt","ref","rootElement"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderer: ''};\n  }\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n    var renderer = new THREE.WebGLRenderer();\n\n    // on active la VR\n    renderer.vr.enabled = true;\n\n    // on resize le renderer\n    renderer.setSize( window.innerWidth/2, window.innerHeight/2 );\n\n    this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n    this.mount.appendChild( renderer.domElement );\n\n    // creation de la 3D\n    var light = new THREE.DirectionalLight( 0xffffff );\n    light.position.set( 0, 1, 1 ).normalize();\n\n    var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    var material = new THREE.MeshPhongMaterial( { ambient: 0x050505, color: 0xFF0000, specular: 0x555555, shininess: 30} );\n    var cube = new THREE.Mesh( geometry, material );\n\n    // on ajoute les éléments à la scene\n    scene.add( cube );\n    scene.add( light );\n    // on gere la position de la camera\n    camera.position.z = 5;\n    var animate = function () {\n      requestAnimationFrame( animate );\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render( scene, camera );\n    };\n    animate();\n  }\n\n  init() {\n\n\t\t\t\tvar container, mesh;\n\n\t\t\t\tcontainer = document.getElementById( 'container' );\n\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1100 );\n\t\t\t\tcamera.target = new THREE.Vector3( 0, 0, 0 );\n\n\t\t\t\tscene = new THREE.Scene();\n\n\t\t\t\tvar geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n\t\t\t\t// invert the geometry on the x-axis so that all of the faces point inward\n\t\t\t\tgeometry.scale( - 1, 1, 1 );\n\n\t\t\t\tvar texture = new THREE.TextureLoader().load( 'textures/2294472375_24a3b8ef46_o.jpg' );\n\t\t\t\tvar material = new THREE.MeshBasicMaterial( { map: texture } );\n\n\t\t\t\tmesh = new THREE.Mesh( geometry, material );\n\n\t\t\t\tscene.add( mesh );\n\n\t\t\t\trenderer = new THREE.WebGLRenderer();\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t\tcontainer.appendChild( renderer.domElement );\n\n\t\t\t\tdocument.addEventListener( 'mousedown', onPointerStart, false );\n\t\t\t\tdocument.addEventListener( 'mousemove', onPointerMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onPointerUp, false );\n\n\t\t\t\tdocument.addEventListener( 'wheel', onDocumentMouseWheel, false );\n\n\t\t\t\tdocument.addEventListener( 'touchstart', onPointerStart, false );\n\t\t\t\tdocument.addEventListener( 'touchmove', onPointerMove, false );\n\t\t\t\tdocument.addEventListener( 'touchend', onPointerUp, false );\n\n\t\t\t\t//\n\n\t\t\t\tdocument.addEventListener( 'dragover', function ( event ) {\n\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.dataTransfer.dropEffect = 'copy';\n\n\t\t\t\t}, false );\n\n\t\t\t\tdocument.addEventListener( 'dragenter', function () {\n\n\t\t\t\t\tdocument.body.style.opacity = 0.5;\n\n\t\t\t\t}, false );\n\n\t\t\t\tdocument.addEventListener( 'dragleave', function () {\n\n\t\t\t\t\tdocument.body.style.opacity = 1;\n\n\t\t\t\t}, false );\n\n\t\t\t\tdocument.addEventListener( 'drop', function ( event ) {\n\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\treader.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\t\tmaterial.map.image.src = event.target.result;\n\t\t\t\t\t\tmaterial.map.needsUpdate = true;\n\n\t\t\t\t\t}, false );\n\t\t\t\t\treader.readAsDataURL( event.dataTransfer.files[ 0 ] );\n\n\t\t\t\t\tdocument.body.style.opacity = 1;\n\n\t\t\t\t}, false );\n\n\t\t\t\t//\n\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\t}\n\n\tonWindowResize() {\n\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\t}\n\n\tonPointerStart( event ) {\n\n\t\t\tisUserInteracting = true;\n\n\t\t\tvar clientX = event.clientX || event.touches[ 0 ].clientX;\n\t\t\tvar clientY = event.clientY || event.touches[ 0 ].clientY;\n\n\t\t\tonMouseDownMouseX = clientX;\n\t\t\tonMouseDownMouseY = clientY;\n\n\t\t\tonMouseDownLon = lon;\n\t\t\tonMouseDownLat = lat;\n\n\t\t}\n\n\tonPointerMove( event ) {\n\n\t\t\tif ( isUserInteracting === true ) {\n\n\t\t\t\tvar clientX = event.clientX || event.touches[ 0 ].clientX;\n\t\t\t\tvar clientY = event.clientY || event.touches[ 0 ].clientY;\n\n\t\t\t\tlon = ( onMouseDownMouseX - clientX ) * 0.1 + onMouseDownLon;\n\t\t\t\tlat = ( clientY - onMouseDownMouseY ) * 0.1 + onMouseDownLat;\n\n\t\t\t}\n\n\t\t}\n\n\tonPointerUp() {\n\n\t\t\tisUserInteracting = false;\n\n\t\t}\n\n\tonDocumentMouseWheel( event ) {\n\n\t\t\tvar fov = camera.fov + event.deltaY * 0.05;\n\n\t\t\tcamera.fov = THREE.Math.clamp( fov, 10, 75 );\n\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\tanimate() {\n\n\t\t\trequestAnimationFrame( animate );\n\t\t\tupdate();\n\n\t\t}\n\n\tupdate() {\n\n\t\t\tif ( isUserInteracting === false ) {\n\n\t\t\t\tlon += 0.1;\n\n\t\t\t}\n\n\t\t\tlat = Math.max( - 85, Math.min( 85, lat ) );\n\t\t\tphi = THREE.Math.degToRad( 90 - lat );\n\t\t\ttheta = THREE.Math.degToRad( lon );\n\n\t\t\tcamera.target.x = 500 * Math.sin( phi ) * Math.cos( theta );\n\t\t\tcamera.target.y = 500 * Math.cos( phi );\n\t\t\tcamera.target.z = 500 * Math.sin( phi ) * Math.sin( theta );\n\n\t\t\tcamera.lookAt( camera.target );\n\n\t\t\t/*\n\t\t\t// distortion\n\t\t\tcamera.position.copy( camera.target ).negate();\n\t\t\t*/\n\n\t\t\trenderer.render( scene, camera );\n\n\t\t}\n\n\n  render() {\n    return (\n      <div>\n        <div ref={ref => (this.mount = ref)} />\n        <button ref={ this.state.renderer  }></button>\n      </div>\n    )\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}