{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/homeView/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frame: '',\n      renderer: ''\n    };\n  }\n\n  componentDidMount() {\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n    var camera, scene, renderer;\n    var isUserInteracting = false,\n        onMouseDownMouseX = 0,\n        onMouseDownMouseY = 0,\n        lon = 0,\n        onMouseDownLon = 0,\n        lat = 0,\n        onMouseDownLat = 0,\n        phi = 0,\n        theta = 0;\n    var init = init();\n    var frame = init.toDataURL();\n    animate();\n    this.setState({\n      frame: frame\n    }); //this.mount.appendChild( frame );\n\n    function init() {\n      var mesh;\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1100);\n      camera.target = new THREE.Vector3(0, 0, 0);\n      scene = new THREE.Scene();\n      var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward\n\n      geometry.scale(-1, 1, 1);\n      var texture = new THREE.TextureLoader().load('img/IMG_7233.JPG');\n      var material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight); //document.body.appendChild( renderer.domElement );\n\n      document.addEventListener('mousedown', onPointerStart, false);\n      document.addEventListener('mousemove', onPointerMove, false);\n      document.addEventListener('mouseup', onPointerUp, false);\n      document.addEventListener('wheel', onDocumentMouseWheel, false);\n      document.addEventListener('touchstart', onPointerStart, false);\n      document.addEventListener('touchmove', onPointerMove, false);\n      document.addEventListener('touchend', onPointerUp, false); //\n\n      document.addEventListener('dragover', function (event) {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n      }, false);\n      document.addEventListener('dragenter', function () {\n        document.body.style.opacity = 0.5;\n      }, false);\n      document.addEventListener('dragleave', function () {\n        document.body.style.opacity = 1;\n      }, false);\n      document.addEventListener('drop', function (event) {\n        event.preventDefault();\n        var reader = new FileReader();\n        reader.addEventListener('load', function (event) {\n          material.map.image.src = event.target.result;\n          material.map.needsUpdate = true;\n        }, false);\n        reader.readAsDataURL(event.dataTransfer.files[0]);\n        document.body.style.opacity = 1;\n      }, false); //\n\n      window.addEventListener('resize', onWindowResize, false);\n      return renderer.domElement;\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function onPointerStart(event) {\n      isUserInteracting = true;\n      var clientX = event.clientX || event.touches[0].clientX;\n      var clientY = event.clientY || event.touches[0].clientY;\n      onMouseDownMouseX = clientX;\n      onMouseDownMouseY = clientY;\n      onMouseDownLon = lon;\n      onMouseDownLat = lat;\n    }\n\n    function onPointerMove(event) {\n      if (isUserInteracting === true) {\n        var clientX = event.clientX || event.touches[0].clientX;\n        var clientY = event.clientY || event.touches[0].clientY;\n        lon = (onMouseDownMouseX - clientX) * 0.1 + onMouseDownLon;\n        lat = (clientY - onMouseDownMouseY) * 0.1 + onMouseDownLat;\n      }\n    }\n\n    function onPointerUp() {\n      isUserInteracting = false;\n    }\n\n    function onDocumentMouseWheel(event) {\n      var fov = camera.fov + event.deltaY * 0.05;\n      camera.fov = THREE.Math.clamp(fov, 10, 75);\n      camera.updateProjectionMatrix();\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      update();\n    }\n\n    function update() {\n      if (isUserInteracting === false) {\n        lon += 0.1;\n      }\n\n      lat = Math.max(-85, Math.min(85, lat));\n      phi = THREE.Math.degToRad(90 - lat);\n      theta = THREE.Math.degToRad(lon);\n      camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n      camera.target.y = 500 * Math.cos(phi);\n      camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n      camera.lookAt(camera.target);\n      /*\n      // distortion\n      camera.position.copy( camera.target ).negate();\n      */\n\n      renderer.render(scene, camera);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      src: this.state.frame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      ref: this.state.renderer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 215\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/homeView/src/index.js"],"names":["React","Component","ReactDOM","THREE","WEBVR","App","constructor","props","state","frame","renderer","componentDidMount","camera","scene","isUserInteracting","onMouseDownMouseX","onMouseDownMouseY","lon","onMouseDownLon","lat","onMouseDownLat","phi","theta","init","toDataURL","animate","setState","mesh","PerspectiveCamera","window","innerWidth","innerHeight","target","Vector3","Scene","geometry","SphereBufferGeometry","scale","texture","TextureLoader","load","material","MeshBasicMaterial","map","Mesh","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","document","addEventListener","onPointerStart","onPointerMove","onPointerUp","onDocumentMouseWheel","event","preventDefault","dataTransfer","dropEffect","body","style","opacity","reader","FileReader","image","src","result","needsUpdate","readAsDataURL","files","onWindowResize","domElement","aspect","updateProjectionMatrix","clientX","touches","clientY","fov","deltaY","Math","clamp","requestAnimationFrame","update","max","min","degToRad","x","sin","cos","y","z","lookAt","render","rootElement","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frame: '',\n      renderer: ''};\n  }\n  componentDidMount() {\n\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n\n    var camera, scene, renderer;\n\n\t\tvar isUserInteracting = false,\n\t\t\t\tonMouseDownMouseX = 0, onMouseDownMouseY = 0,\n\t\t\t\tlon = 0, onMouseDownLon = 0,\n\t\t\t\tlat = 0, onMouseDownLat = 0,\n\t\t\t\tphi = 0, theta = 0;\n\n    var init = init();\n    var frame = init.toDataURL();\n\t\tanimate();\n    this.setState({frame: frame});\n    //this.mount.appendChild( frame );\n\n    function init() {\n\n        var mesh;\n\n\n        camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1100 );\n        camera.target = new THREE.Vector3( 0, 0, 0 );\n\n        scene = new THREE.Scene();\n\n        var geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n        // invert the geometry on the x-axis so that all of the faces point inward\n        geometry.scale( - 1, 1, 1 );\n\n        var texture = new THREE.TextureLoader().load( 'img/IMG_7233.JPG' );\n        var material = new THREE.MeshBasicMaterial( { map: texture } );\n\n        mesh = new THREE.Mesh( geometry, material );\n\n        scene.add( mesh );\n\n        renderer = new THREE.WebGLRenderer();\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n\n\n        //document.body.appendChild( renderer.domElement );\n\n        document.addEventListener( 'mousedown', onPointerStart, false );\n        document.addEventListener( 'mousemove', onPointerMove, false );\n        document.addEventListener( 'mouseup', onPointerUp, false );\n\n        document.addEventListener( 'wheel', onDocumentMouseWheel, false );\n\n        document.addEventListener( 'touchstart', onPointerStart, false );\n        document.addEventListener( 'touchmove', onPointerMove, false );\n        document.addEventListener( 'touchend', onPointerUp, false );\n\n        //\n\n        document.addEventListener( 'dragover', function ( event ) {\n\n          event.preventDefault();\n          event.dataTransfer.dropEffect = 'copy';\n\n        }, false );\n\n        document.addEventListener( 'dragenter', function () {\n\n          document.body.style.opacity = 0.5;\n\n        }, false );\n\n        document.addEventListener( 'dragleave', function () {\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        document.addEventListener( 'drop', function ( event ) {\n\n          event.preventDefault();\n\n          var reader = new FileReader();\n          reader.addEventListener( 'load', function ( event ) {\n\n            material.map.image.src = event.target.result;\n            material.map.needsUpdate = true;\n\n          }, false );\n          reader.readAsDataURL( event.dataTransfer.files[ 0 ] );\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        //\n\n        window.addEventListener( 'resize', onWindowResize, false );\n\n        return(renderer.domElement);\n      }\n\n\n    function onWindowResize() {\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n      }\n\n    function onPointerStart( event ) {\n        isUserInteracting = true;\n\n        var clientX = event.clientX || event.touches[ 0 ].clientX;\n        var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n        onMouseDownMouseX = clientX;\n        onMouseDownMouseY = clientY;\n\n        onMouseDownLon = lon;\n        onMouseDownLat = lat;\n\n      }\n\n    function onPointerMove( event ) {\n        if ( isUserInteracting === true ) {\n\n          var clientX = event.clientX || event.touches[ 0 ].clientX;\n          var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n          lon = ( onMouseDownMouseX - clientX ) * 0.1 + onMouseDownLon;\n          lat = ( clientY - onMouseDownMouseY ) * 0.1 + onMouseDownLat;\n\n        }\n\n      }\n\n    function onPointerUp() {\n\n        isUserInteracting = false;\n\n      }\n\n    function onDocumentMouseWheel( event ) {\n        var fov = camera.fov + event.deltaY * 0.05;\n\n        camera.fov = THREE.Math.clamp( fov, 10, 75 );\n\n        camera.updateProjectionMatrix();\n\n      }\n\n    function animate() {\n\n        requestAnimationFrame( animate );\n        update();\n\n      }\n\n    function update() {\n\n        if ( isUserInteracting === false ) {\n\n          lon += 0.1;\n\n        }\n\n        lat = Math.max( - 85, Math.min( 85, lat ) );\n        phi = THREE.Math.degToRad( 90 - lat );\n        theta = THREE.Math.degToRad( lon );\n\n        camera.target.x = 500 * Math.sin( phi ) * Math.cos( theta );\n        camera.target.y = 500 * Math.cos( phi );\n        camera.target.z = 500 * Math.sin( phi ) * Math.sin( theta );\n\n        camera.lookAt( camera.target );\n\n        /*\n        // distortion\n        camera.position.copy( camera.target ).negate();\n        */\n\n        renderer.render( scene, camera );\n\n      }\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div src={ this.state.frame }></div>\n        <button ref={ this.state.renderer  }></button>\n      </div>\n    )\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}