{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/SchoolBag/lab/react-js/camera/src/App.js\";\nimport React from 'react';\nimport CameraPhoto, { FACING_MODES } from 'jslib-html5-camera-photo';\n\nclass App extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.cameraPhoto = null;\n    this.videoRef = React.createRef();\n    this.state = {\n      dataUri: ''\n    };\n  }\n\n  componentDidMount() {\n    // We need to instantiate CameraPhoto inside componentDidMount because we\n    // need the refs.video to get the videoElement so the component has to be\n    // mounted.\n    this.cameraPhoto = new CameraPhoto(this.videoRef.current);\n  }\n\n  startCamera(idealFacingMode, idealResolution) {\n    this.cameraPhoto.startCamera(idealFacingMode, idealResolution).then(() => {\n      console.log('camera is started !');\n    }).catch(error => {\n      console.error('Camera not started!', error);\n    });\n  }\n\n  startCameraMaxResolution(idealFacingMode) {\n    this.cameraPhoto.startCameraMaxResolution(idealFacingMode).then(() => {\n      console.log('camera is started !');\n    }).catch(error => {\n      console.error('Camera not started!', error);\n    });\n  }\n\n  takePhoto() {\n    const config = {\n      sizeFactor: 1\n    };\n    let dataUri = this.cameraPhoto.getDataUri(config);\n    this.setState({\n      dataUri\n    });\n  }\n\n  stopCamera() {\n    this.cameraPhoto.stopCamera().then(() => {\n      console.log('Camera stoped!');\n    }).catch(error => {\n      console.log('No camera to stop!:', error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        let facingMode = FACING_MODES.ENVIRONMENT;\n        let idealResolution = {\n          width: 640,\n          height: 480\n        };\n        this.startCamera(facingMode, idealResolution);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Start environment facingMode resolution ideal 640 by 480 \"), React.createElement(\"button\", {\n      onClick: () => {\n        let facingMode = FACING_MODES.USER;\n        this.startCamera(facingMode, {});\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Start user facingMode resolution default \"), React.createElement(\"button\", {\n      onClick: () => {\n        let facingMode = FACING_MODES.USER;\n        this.startCameraMaxResolution(facingMode);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Start user facingMode resolution maximum \"), React.createElement(\"button\", {\n      onClick: () => {\n        this.takePhoto();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" Take photo \"), React.createElement(\"button\", {\n      onClick: () => {\n        this.stopCamera();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" Stop \"), React.createElement(\"video\", {\n      ref: this.videoRef,\n      autoPlay: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      alt: \"imgCamera\",\n      src: this.state.dataUri,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/SchoolBag/lab/react-js/camera/src/App.js"],"names":["React","CameraPhoto","FACING_MODES","App","Component","constructor","props","context","cameraPhoto","videoRef","createRef","state","dataUri","componentDidMount","current","startCamera","idealFacingMode","idealResolution","then","console","log","catch","error","startCameraMaxResolution","takePhoto","config","sizeFactor","getDataUri","setState","stopCamera","render","facingMode","ENVIRONMENT","width","height","USER"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CameraPhoto, { FACING_MODES } from 'jslib-html5-camera-photo';\n\nclass App extends React.Component {\n  constructor (props, context) {\n    super(props, context);\n    this.cameraPhoto = null;\n    this.videoRef = React.createRef();\n    this.state = {\n      dataUri: ''\n    }\n  }\n\n  componentDidMount () {\n    // We need to instantiate CameraPhoto inside componentDidMount because we\n    // need the refs.video to get the videoElement so the component has to be\n    // mounted.\n    this.cameraPhoto = new CameraPhoto(this.videoRef.current);\n  }\n\n  startCamera (idealFacingMode, idealResolution) {\n    this.cameraPhoto.startCamera(idealFacingMode, idealResolution)\n      .then(() => {\n        console.log('camera is started !');\n      })\n      .catch((error) => {\n        console.error('Camera not started!', error);\n      });\n  }\n\n  startCameraMaxResolution (idealFacingMode) {\n    this.cameraPhoto.startCameraMaxResolution(idealFacingMode)\n      .then(() => {\n        console.log('camera is started !');\n      })\n      .catch((error) => {\n        console.error('Camera not started!', error);\n      });\n  }\n\n  takePhoto () {\n    const config = {\n      sizeFactor: 1\n    };\n\n    let dataUri = this.cameraPhoto.getDataUri(config);\n    this.setState({ dataUri });\n  }\n\n  stopCamera () {\n    this.cameraPhoto.stopCamera()\n      .then(() => {\n        console.log('Camera stoped!');\n      })\n      .catch((error) => {\n        console.log('No camera to stop!:', error);\n      });\n  }\n\n  render () {\n    return (\n      <div>\n        <button onClick={ () => {\n          let facingMode = FACING_MODES.ENVIRONMENT;\n          let idealResolution = { width: 640, height: 480 };\n          this.startCamera(facingMode, idealResolution);\n        }}> Start environment facingMode resolution ideal 640 by 480 </button>\n\n        <button onClick={ () => {\n          let facingMode = FACING_MODES.USER;\n          this.startCamera(facingMode, {});\n        }}> Start user facingMode resolution default </button>\n\n        <button onClick={ () => {\n          let facingMode = FACING_MODES.USER;\n          this.startCameraMaxResolution(facingMode);\n        }}> Start user facingMode resolution maximum </button>\n\n        <button onClick={ () => {\n          this.takePhoto();\n        }}> Take photo </button>\n\n        <button onClick={ () => {\n          this.stopCamera();\n        }}> Stop </button>\n\n        <video\n          ref={this.videoRef}\n          autoPlay=\"true\"\n        />\n        <img\n          alt=\"imgCamera\"\n          src={this.state.dataUri}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}