{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/SchoolBag/lab/react-js/chat/src/App.js\";\nimport React from 'react';\nimport { sendMessage, getMessages } from './api';\nimport './App.css';\n\nclass TextSubmit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const purpose = this.props.purpose;\n    sendMessage(this.state.inputValue); //this.props.parentCallback(this.state.inputValue);\n\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"MChat-textSubmit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: this.props.typeInput,\n      value: this.state.value,\n      onChange: this.handleChange,\n      placeholder: \"Ecrivez votre message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.valueSubmit));\n  }\n\n}\n\nfunction Message(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"MChat-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.text));\n}\n\nclass MicroChat extends React.Component {\n  constructor(props) {\n    super(props); // on set un tableau vide\n\n    this.state = {\n      arrayMessage: [],\n      purpose: 'start'\n    }; // on met chaque nouveau message dans le tableau\n\n    getMessages((err, retour) => {\n      const newArray = this.state.arrayMessage.concat(React.createElement(Message, {\n        text: retour,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n      this.setState({\n        arrayMessage: newArray\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"MChat-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"MChat-content-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.arrayMessage), React.createElement(TextSubmit, {\n      purpose: this.state.purpose,\n      typeInput: \"text\",\n      valueSubmit: \"Envoyer\",\n      parentCallback: this.callbackFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MicroChat;","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/SchoolBag/lab/react-js/chat/src/App.js"],"names":["React","sendMessage","getMessages","TextSubmit","Component","constructor","props","state","inputValue","handleSubmit","bind","handleChange","event","setState","target","value","purpose","preventDefault","render","typeInput","valueSubmit","Message","text","MicroChat","arrayMessage","err","retour","newArray","concat","callbackFunction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { sendMessage, getMessages } from './api';\n\nimport './App.css';\n\n\nclass TextSubmit extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {inputValue: ''};\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({inputValue: event.target.value})\n  }\n\n  handleSubmit(event) {\n    const purpose = this.props.purpose;\n    \n    sendMessage(this.state.inputValue)\n    //this.props.parentCallback(this.state.inputValue);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"MChat-textSubmit\">\n        <input type={this.props.typeInput} value={this.state.value} onChange={this.handleChange} placeholder=\"Ecrivez votre message\"/>\n        <button onClick={this.handleSubmit}>{this.props.valueSubmit}</button>\n      </div>\n    );\n  }\n}\n\nfunction Message(props){\n  return(\n    <div><span className=\"MChat-message\">{props.text}</span></div>\n  )\n}\n\nclass MicroChat extends React.Component {\n  constructor(props){\n    super(props)\n    // on set un tableau vide\n    this.state = {\n      arrayMessage: [],\n      purpose: 'start'\n    };\n\n    // on met chaque nouveau message dans le tableau\n    getMessages((err, retour) => {\n      const newArray = this.state.arrayMessage.concat(\n        <Message text={retour}/>\n      );\n      this.setState({arrayMessage: newArray})\n    });\n\n  }\n\n\n  render() {\n\n    return (\n      <section className=\"MChat-container\">\n        <div className=\"MChat-content-message\">\n        {this.state.arrayMessage}\n        </div>\n        <TextSubmit purpose={this.state.purpose} typeInput=\"text\" valueSubmit=\"Envoyer\" parentCallback = {this.callbackFunction}/>\n      </section>\n    );\n  }\n}\n\n\nexport default MicroChat;\n"]},"metadata":{},"sourceType":"module"}