{"ast":null,"code":"import openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:8000'); // Fonction qui envoit le message\n\nfunction sendMessage(message) {\n  socket.emit('sendMessage', message);\n} // on envoit le pseudo si il y a nouvelle connection\n\n\nfunction sendPseudo(pseudo) {\n  socket.emit('sendPseudo', pseudo);\n} // Fonction qui récupère le message broadcasté\n\n\nfunction getMessages(cb) {\n  socket.on('emitMessage', retourMessage => cb(null, retourMessage));\n} // Fonction qui récupère le message broadcasté\n\n\nfunction getPseudo(cb) {\n  socket.on('emitPseudo', retourPseudo => cb(null, retourPseudo));\n} // On exporte les fonctions\n\n\nexport { sendMessage, getMessages, sendPseudo, getPseudo };","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/SchoolBag/lab/react-js/camera/src/api.js"],"names":["openSocket","socket","sendMessage","message","emit","sendPseudo","pseudo","getMessages","cb","on","retourMessage","getPseudo","retourPseudo"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,MAAMC,MAAM,GAAGD,UAAU,CAAC,uBAAD,CAAzB,C,CAEA;;AACA,SAASE,WAAT,CAAqBC,OAArB,EAA8B;AAC5BF,EAAAA,MAAM,CAACG,IAAP,CAAY,aAAZ,EAA2BD,OAA3B;AACD,C,CACD;;;AACA,SAASE,UAAT,CAAoBC,MAApB,EAA2B;AACzBL,EAAAA,MAAM,CAACG,IAAP,CAAY,YAAZ,EAA0BE,MAA1B;AACD,C,CACD;;;AACA,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AACvBP,EAAAA,MAAM,CAACQ,EAAP,CAAU,aAAV,EAAyBC,aAAa,IAAIF,EAAE,CAAC,IAAD,EAAOE,aAAP,CAA5C;AACD,C,CAED;;;AACA,SAASC,SAAT,CAAmBH,EAAnB,EAAuB;AACrBP,EAAAA,MAAM,CAACQ,EAAP,CAAU,YAAV,EAAwBG,YAAY,IAAIJ,EAAE,CAAC,IAAD,EAAOI,YAAP,CAA1C;AACD,C,CAED;;;AACA,SAASV,WAAT,EAAsBK,WAAtB,EAAmCF,UAAnC,EAA+CM,SAA/C","sourcesContent":["import openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:8000');\n\n// Fonction qui envoit le message\nfunction sendMessage(message) {\n  socket.emit('sendMessage', message);\n}\n// on envoit le pseudo si il y a nouvelle connection\nfunction sendPseudo(pseudo){\n  socket.emit('sendPseudo', pseudo);\n}\n// Fonction qui récupère le message broadcasté\nfunction getMessages(cb) {\n  socket.on('emitMessage', retourMessage => cb(null, retourMessage));\n}\n\n// Fonction qui récupère le message broadcasté\nfunction getPseudo(cb) {\n  socket.on('emitPseudo', retourPseudo => cb(null, retourPseudo));\n}\n\n// On exporte les fonctions\nexport { sendMessage, getMessages, sendPseudo, getPseudo }\n"]},"metadata":{},"sourceType":"module"}