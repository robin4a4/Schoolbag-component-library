{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/homeView/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\n\nclass SelectRoom extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Test\");\n  }\n\n}\n\nclass FrameVR extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frame: '',\n      renderer: ''\n    };\n  }\n\n  componentDidMount() {\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n    var camera, scene, renderer;\n    var isUserInteracting = false,\n        onMouseDownMouseX = 0,\n        onMouseDownMouseY = 0,\n        lon = 0,\n        onMouseDownLon = 0,\n        lat = 0,\n        onMouseDownLat = 0,\n        phi = 0,\n        theta = 0;\n    var frame = init();\n    animate(); //this.setState({frame: frame});\n\n    this.mount.appendChild(frame);\n\n    function init() {\n      var mesh;\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1100);\n      camera.target = new THREE.Vector3(0, 0, 0);\n      scene = new THREE.Scene();\n      var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward\n\n      geometry.scale(-1, 1, 1);\n      var texture = new THREE.TextureLoader().load(process.env.PUBLIC_URL + '/IMG_7233.JPG');\n      var material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.addEventListener('mousedown', onPointerStart, false);\n      document.addEventListener('mousemove', onPointerMove, false);\n      document.addEventListener('mouseup', onPointerUp, false);\n      document.addEventListener('wheel', onDocumentMouseWheel, false);\n      document.addEventListener('touchstart', onPointerStart, false);\n      document.addEventListener('touchmove', onPointerMove, false);\n      document.addEventListener('touchend', onPointerUp, false);\n      document.addEventListener('dragover', function (event) {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n      }, false);\n      document.addEventListener('dragenter', function () {\n        document.body.style.opacity = 0.5;\n      }, false);\n      document.addEventListener('dragleave', function () {\n        document.body.style.opacity = 1;\n      }, false);\n      document.addEventListener('drop', function (event) {\n        event.preventDefault();\n        var reader = new FileReader();\n        reader.addEventListener('load', function (event) {\n          material.map.image.src = event.target.result;\n          material.map.needsUpdate = true;\n        }, false);\n        reader.readAsDataURL(event.dataTransfer.files[0]);\n        document.body.style.opacity = 1;\n      }, false); //\n\n      window.addEventListener('resize', onWindowResize, false);\n      return renderer.domElement;\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function onPointerStart(event) {\n      isUserInteracting = true;\n      var clientX = event.clientX || event.touches[0].clientX;\n      var clientY = event.clientY || event.touches[0].clientY;\n      onMouseDownMouseX = clientX;\n      onMouseDownMouseY = clientY;\n      onMouseDownLon = lon;\n      onMouseDownLat = lat;\n    }\n\n    function onPointerMove(event) {\n      if (isUserInteracting === true) {\n        var clientX = event.clientX || event.touches[0].clientX;\n        var clientY = event.clientY || event.touches[0].clientY;\n        lon = (onMouseDownMouseX - clientX) * 0.1 + onMouseDownLon;\n        lat = (clientY - onMouseDownMouseY) * 0.1 + onMouseDownLat;\n      }\n    }\n\n    function onPointerUp() {\n      isUserInteracting = false;\n    }\n\n    function onDocumentMouseWheel(event) {\n      var fov = camera.fov + event.deltaY * 0.05;\n      camera.fov = THREE.Math.clamp(fov, 10, 75);\n      camera.updateProjectionMatrix();\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      update();\n    }\n\n    function update() {\n      lat = Math.max(-85, Math.min(85, lat));\n      phi = THREE.Math.degToRad(90 - lat);\n      theta = THREE.Math.degToRad(lon);\n      camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n      camera.target.y = 500 * Math.cos(phi);\n      camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n      camera.lookAt(camera.target);\n      /*\n      // distortion\n      camera.position.copy( camera.target ).negate();\n      */\n\n      renderer.render(scene, camera);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass App extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(SelectRoom, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(FrameVR, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 222\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/homeView/src/index.js"],"names":["React","Component","ReactDOM","THREE","WEBVR","SelectRoom","render","FrameVR","constructor","props","state","frame","renderer","componentDidMount","camera","scene","isUserInteracting","onMouseDownMouseX","onMouseDownMouseY","lon","onMouseDownLon","lat","onMouseDownLat","phi","theta","init","animate","mount","appendChild","mesh","PerspectiveCamera","window","innerWidth","innerHeight","target","Vector3","Scene","geometry","SphereBufferGeometry","scale","texture","TextureLoader","load","process","env","PUBLIC_URL","material","MeshBasicMaterial","map","Mesh","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","document","addEventListener","onPointerStart","onPointerMove","onPointerUp","onDocumentMouseWheel","event","preventDefault","dataTransfer","dropEffect","body","style","opacity","reader","FileReader","image","src","result","needsUpdate","readAsDataURL","files","onWindowResize","domElement","aspect","updateProjectionMatrix","clientX","touches","clientY","fov","deltaY","Math","clamp","requestAnimationFrame","update","max","min","degToRad","x","sin","cos","y","z","lookAt","ref","App","rootElement","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { WEBVR } from 'three/examples/jsm/vr/WebVR.js';\nclass SelectRoom extends Component {\n  render() {\n    return (\n      <div>Test</div>\n    )\n  }\n}\nclass FrameVR extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frame: '',\n      renderer: ''};\n  }\n  componentDidMount() {\n\n    //this.setState({ renderer: WEBVR.createButton( renderer, { referenceSpaceType: 'local' } ) });\n    // on ajoute l'élément au composant react\n\n    var camera, scene, renderer;\n\n\t\tvar isUserInteracting = false,\n\t\t\t\tonMouseDownMouseX = 0, onMouseDownMouseY = 0,\n\t\t\t\tlon = 0, onMouseDownLon = 0,\n\t\t\t\tlat = 0, onMouseDownLat = 0,\n\t\t\t\tphi = 0, theta = 0;\n\n    var frame = init();\n\n\t\tanimate();\n    //this.setState({frame: frame});\n    this.mount.appendChild( frame );\n\n    function init() {\n\n        var mesh;\n\n\n        camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1100 );\n        camera.target = new THREE.Vector3( 0, 0, 0 );\n\n        scene = new THREE.Scene();\n\n        var geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n        // invert the geometry on the x-axis so that all of the faces point inward\n        geometry.scale( -1, 1, 1 );\n\n        var texture = new THREE.TextureLoader().load( process.env.PUBLIC_URL + '/IMG_7233.JPG' );\n\n        var material = new THREE.MeshBasicMaterial( { map: texture } );\n\n        mesh = new THREE.Mesh( geometry, material );\n\n        scene.add( mesh );\n\n        renderer = new THREE.WebGLRenderer();\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n        document.addEventListener( 'mousedown', onPointerStart, false );\n        document.addEventListener( 'mousemove', onPointerMove, false );\n        document.addEventListener( 'mouseup', onPointerUp, false );\n\n        document.addEventListener( 'wheel', onDocumentMouseWheel, false );\n\n        document.addEventListener( 'touchstart', onPointerStart, false );\n        document.addEventListener( 'touchmove', onPointerMove, false );\n        document.addEventListener( 'touchend', onPointerUp, false );\n\n\n        document.addEventListener( 'dragover', function ( event ) {\n\n          event.preventDefault();\n          event.dataTransfer.dropEffect = 'copy';\n\n        }, false );\n\n        document.addEventListener( 'dragenter', function () {\n\n          document.body.style.opacity = 0.5;\n\n        }, false );\n\n        document.addEventListener( 'dragleave', function () {\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        document.addEventListener( 'drop', function ( event ) {\n\n          event.preventDefault();\n\n          var reader = new FileReader();\n          reader.addEventListener( 'load', function ( event ) {\n\n            material.map.image.src = event.target.result;\n            material.map.needsUpdate = true;\n\n          }, false );\n          reader.readAsDataURL( event.dataTransfer.files[ 0 ] );\n\n          document.body.style.opacity = 1;\n\n        }, false );\n\n        //\n\n        window.addEventListener( 'resize', onWindowResize, false );\n\n        return(renderer.domElement);\n      }\n\n\n    function onWindowResize() {\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n      }\n\n    function onPointerStart( event ) {\n        isUserInteracting = true;\n\n        var clientX = event.clientX || event.touches[ 0 ].clientX;\n        var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n        onMouseDownMouseX = clientX;\n        onMouseDownMouseY = clientY;\n\n        onMouseDownLon = lon;\n        onMouseDownLat = lat;\n\n      }\n\n    function onPointerMove( event ) {\n        if ( isUserInteracting === true ) {\n\n          var clientX = event.clientX || event.touches[ 0 ].clientX;\n          var clientY = event.clientY || event.touches[ 0 ].clientY;\n\n          lon = ( onMouseDownMouseX - clientX ) * 0.1 + onMouseDownLon;\n          lat = ( clientY - onMouseDownMouseY ) * 0.1 + onMouseDownLat;\n\n        }\n\n      }\n\n    function onPointerUp() {\n\n        isUserInteracting = false;\n\n      }\n\n    function onDocumentMouseWheel( event ) {\n        var fov = camera.fov + event.deltaY * 0.05;\n\n        camera.fov = THREE.Math.clamp( fov, 10, 75 );\n\n        camera.updateProjectionMatrix();\n\n      }\n\n    function animate() {\n\n        requestAnimationFrame( animate );\n        update();\n\n      }\n\n    function update() {\n\n        lat = Math.max( - 85, Math.min( 85, lat ) );\n        phi = THREE.Math.degToRad( 90 - lat );\n        theta = THREE.Math.degToRad( lon );\n\n        camera.target.x = 500 * Math.sin( phi ) * Math.cos( theta );\n        camera.target.y = 500 * Math.cos( phi );\n        camera.target.z = 500 * Math.sin( phi ) * Math.sin( theta );\n\n        camera.lookAt( camera.target );\n\n        /*\n        // distortion\n        camera.position.copy( camera.target ).negate();\n        */\n\n        renderer.render( scene, camera );\n\n      }\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div ref={ref => (this.mount = ref)} />\n\n      </div>\n    )\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <SelectRoom/>\n        <FrameVR/>\n      </div>\n    )\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}