{"ast":null,"code":"var _jsxFileName = \"/Users/robinmarillia/Documents/dev/SchoolBag/lab/react-js/chat/src/App.js\";\nimport React from 'react';\nimport { sendMessage, getMessages } from './api';\nimport './App.css';\n\nclass TextSubmit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    sendMessage(this.state.inputValue); //this.props.parentCallback(this.state.inputValue);\n\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: this.props.typeInput,\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.valueSubmit));\n  }\n\n}\n\nfunction Message(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.text);\n}\n\nclass MicroChat extends React.Component {\n  constructor(props) {\n    super(props); // on set un tableau vide\n\n    this.state = {\n      arrayMessage: []\n    }; // on met chaque nouveau message dans le tableau\n\n    getMessages((err, retour) => {\n      const newArray = this.state.arrayMessage.concat(retour);\n      this.setState({\n        arrayMessage: newArray\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.arrayMessage), React.createElement(TextSubmit, {\n      typeInput: \"text\",\n      valueSubmit: \"Envoyer\",\n      parentCallback: this.callbackFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MicroChat;","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/SchoolBag/lab/react-js/chat/src/App.js"],"names":["React","sendMessage","getMessages","TextSubmit","Component","constructor","props","state","inputValue","handleSubmit","bind","handleChange","event","setState","target","value","preventDefault","render","typeInput","valueSubmit","Message","text","MicroChat","arrayMessage","err","retour","newArray","concat","callbackFunction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,OAAzC;AAEA,OAAO,WAAP;;AAGA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAGDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACL,MAAAA,UAAU,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAA1B,KAAd;AACD;;AAEDN,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClBX,IAAAA,WAAW,CAAC,KAAKM,KAAL,CAAWC,UAAZ,CAAX,CADkB,CAElB;;AACAI,IAAAA,KAAK,CAACI,cAAN;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,SAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWQ,KAArD;AAA4D,MAAA,QAAQ,EAAE,KAAKJ,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKF,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC,KAAKH,KAAL,CAAWa,WAAhD,CAFF,CADF;AAMD;;AA7BsC;;AAgCzC,SAASC,OAAT,CAAiBd,KAAjB,EAAuB;AACrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACe,IAAZ,CADF;AAGD;;AAED,MAAMC,SAAN,SAAwBtB,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN,EADgB,CAEhB;;AACA,SAAKC,KAAL,GAAa;AACXgB,MAAAA,YAAY,EAAE;AADH,KAAb,CAHgB,CAOhB;;AACArB,IAAAA,WAAW,CAAC,CAACsB,GAAD,EAAMC,MAAN,KAAiB;AAC3B,YAAMC,QAAQ,GAAG,KAAKnB,KAAL,CAAWgB,YAAX,CAAwBI,MAAxB,CAA+BF,MAA/B,CAAjB;AACA,WAAKZ,QAAL,CAAc;AAACU,QAAAA,YAAY,EAAEG;AAAf,OAAd;AACD,KAHU,CAAX;AAKD;;AAIDT,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKV,KAAL,CAAWgB,YADZ,CADF,EAIE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,WAAW,EAAC,SAAzC;AAAmD,MAAA,cAAc,EAAI,KAAKK,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AA5BqC;;AAgCxC,eAAeN,SAAf","sourcesContent":["import React from 'react';\nimport { sendMessage, getMessages } from './api';\n\nimport './App.css';\n\n\nclass TextSubmit extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {inputValue: ''};\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({inputValue: event.target.value})\n  }\n\n  handleSubmit(event) {\n    sendMessage(this.state.inputValue)\n    //this.props.parentCallback(this.state.inputValue);\n    event.preventDefault();\n\n\n  }\n\n  render() {\n    return (\n      <div>\n        <input type={this.props.typeInput} value={this.state.value} onChange={this.handleChange}/>\n        <button onClick={this.handleSubmit}>{this.props.valueSubmit}</button>\n      </div>\n    );\n  }\n}\n\nfunction Message(props){\n  return(\n    <div>{props.text}</div>\n  )\n}\n\nclass MicroChat extends React.Component {\n  constructor(props){\n    super(props)\n    // on set un tableau vide\n    this.state = {\n      arrayMessage: []\n    };\n\n    // on met chaque nouveau message dans le tableau\n    getMessages((err, retour) => {\n      const newArray = this.state.arrayMessage.concat(retour);\n      this.setState({arrayMessage: newArray})\n    });\n\n  }\n\n\n\n  render() {\n\n    return (\n      <div>\n        <section>\n        {this.state.arrayMessage}\n        </section>\n        <TextSubmit typeInput=\"text\" valueSubmit=\"Envoyer\" parentCallback = {this.callbackFunction}/>\n      </div>\n    );\n  }\n}\n\n\nexport default MicroChat;\n"]},"metadata":{},"sourceType":"module"}